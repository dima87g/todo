{"version":3,"sources":["../todo_classes.js"],"names":[],"mappings":"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","file":"todo_classes_compiled.js","sourcesContent":["'use strict';\n\nclass TaskList {\n    constructor(loginInst, rawTasks) {\n        this.loginInst = null;\n        this.rawTasks = rawTasks;\n        this.tasksTree = new Map();\n        this.tasks = [];\n\n        for (let task of this.rawTasks) {\n            let taskId = task['task_id'];\n            let taskText = task['task_text'];\n            let taskStatus = task['task_status'];\n            let taskParentId = task['parent_id'];\n\n            this.tasksTree.set(taskId, new Task(taskId, taskText, taskParentId, taskStatus));\n        }\n\n        for (let task of this.tasksTree.values()) {\n            if (this.tasksTree.has(task.parentId)) {\n                this.tasksTree.get(task.parentId).subtasks.push(task);\n            } else {\n                this.tasks.push(task);\n            }\n        }\n\n        ReactDOM.render(<TaskListReact loginInst={this.loginInst}\n                                       taskListInst={this}\n                                       tasksTree={this.tasksTree}\n                                       tasks={this.tasks}/>, document.getElementById('root'));\n    }\n}\n\nclass Task {\n    constructor(id, text, parentId = null, status = false) {\n        this.id = id;\n        this.text = text;\n        this.parentId = parentId;\n        this.status = status;\n        this.subtasks = [];\n    }\n}\n\nclass Login {\n    constructor() {\n        const self = this;\n        this.taskList = undefined;\n        this.authMenu = document.getElementById(\"auth_menu\");\n        this.loginWindow = document.getElementById(\"login_window\");\n        this.loginWindowInfo = document.getElementById(\"login_window_info\");\n        this.loginFormUsername = document.getElementById(\"login_form_username\");\n        this.loginFormPassword = document.getElementById(\"login_form_password\");\n        this.loginButton = document.getElementById(\"login_form_button\");\n        this.registerWindow = document.getElementById(\"register_window\");\n        this.registerWindowInfo = document.getElementById(\"register_window_info\");\n        this.registerFormUsername = document.getElementById(\"register_form_username\");\n        this.registerFormPassword = document.getElementById(\"register_form_password\");\n        this.registerFormPasswordConfirm = document.getElementById(\"register_form_password_confirm\");\n        this.agreementCheckbox = document.getElementById('agreement_checkbox');\n        this.userRegisterButton = document.getElementById(\"register_form_button\");\n        this.switchRegisterButton = document.getElementById(\"register_button\");\n        this.switchLoginButton = document.getElementById(\"login_button\");\n        this.userNameField = document.getElementById(\"user_name_field\");\n        this.userLogOutButton = document.getElementById('user_logout_button');\n        this.userDeleteButton = document.getElementById(\"user_delete_button\");\n        this.userChangePasswordButton = document.getElementById('change_password_button');\n        this.changePasswordWindow = document.getElementById('change_password_window');\n        this.changePasswordWindowCancelButton = document.getElementById('change_password_window_cancel_button');\n        this.changePasswordFormOldPassword = document.getElementById('change_password_form_old_password');\n        this.changePasswordFormNewPassword = document.getElementById('change_password_form_new_password');\n        this.changePasswordFormNewPasswordConfirm = document.getElementById('change_password_form_new_password_confirm');\n        this.changePasswordButton = document.getElementById('change_password_form_button');\n        this.changePasswordWindowInfo = document.getElementById('change_password_window_info');\n\n        this.loginFormUsername.focus();\n        this.userLogOutButton.disabled = true;\n        this.userDeleteButton.disabled = true;\n        this.userChangePasswordButton.disabled = true;\n\n        this.switchRegisterButton.onclick = function () {\n            self.switchLogin(this.value);\n        }\n        this.switchLoginButton.onclick = function () {\n            self.switchLogin(this.value);\n        }\n        this.loginButton.onclick = function () {\n            self.logIn();\n        }\n        this.userLogOutButton.onclick = function () {\n            self.logOut();\n        }\n        this.userDeleteButton.onclick = function () {\n            self.userDelete();\n        }\n        this.userChangePasswordButton.onclick = function() {\n            self.showChangePasswordWindow();\n        }\n        this.changePasswordWindowCancelButton.onclick = function () {\n            self.hideChangePasswordWindow();\n        }\n        this.userRegisterButton.onclick = function () {\n            self.userRegister();\n        }\n        this.changePasswordButton.onclick = function() {\n            self.changePassword();\n        }\n    }\n\n\n    switchLogin(val) {\n        if (val === 'register') {\n            windowChange(this.registerWindow, this.switchLoginButton, this.loginWindow, this.switchRegisterButton, this.loginWindowInfo);\n        } else if (val === 'login') {\n            windowChange(this.loginWindow, this.switchRegisterButton, this.registerWindow, this.switchLoginButton, this.registerWindowInfo);\n        }\n\n        function windowChange(activate, activateButton, deactivate, deactivateButton, infoField) {\n            removeChildren(infoField);\n            deactivate.style.opacity = '0';\n            deactivateButton.disabled = true;\n            activate.style.visibility = 'inherit';\n            setTimeout(function () {\n                activate.style.opacity = '1';\n            });\n            setTimeout(function () {\n                deactivate.style.visibility = 'hidden';\n                activateButton.disabled = false;\n            }, 500);\n        }\n    }\n\n\n    hideLoginWindow() {\n        this.loginFormUsername.value = \"\";\n        this.registerFormUsername.value = '';\n        this.registerFormPassword.value = '';\n        this.registerFormPasswordConfirm.value = '';\n        removeChildren(this.loginWindowInfo);\n        this.authMenu.style.opacity = '0';\n        hideShadow();\n\n        setTimeout(() => {\n            this.authMenu.style.visibility = 'hidden';\n            // document.getElementById('task_input_field').focus();\n        }, 500);\n    }\n\n\n    showLoginWindow() {\n        showShadow();\n        removeChildren(this.userNameField);\n        this.userLogOutButton.disabled = true;\n        this.userDeleteButton.disabled = true;\n        this.userChangePasswordButton.disabled = true;\n        this.authMenu.style.visibility = 'visible';\n        this.loginFormUsername.focus();\n        setTimeout(() => {\n            this.authMenu.style.opacity = '1';\n        });\n    }\n\n    showChangePasswordWindow() {\n        showShadow();\n        this.userLogOutButton.disabled = true;\n        this.userDeleteButton.disabled = true;\n        this.userChangePasswordButton.disabled = true;\n        this.changePasswordWindow.style.visibility = 'visible';\n        this.changePasswordWindowCancelButton.disabled = false;\n        this.changePasswordButton.disabled = false;\n    }\n\n    hideChangePasswordWindow() {\n        hideShadow();\n        this.changePasswordFormOldPassword.value = '';\n        this.changePasswordFormNewPassword.value = '';\n        this.changePasswordFormNewPasswordConfirm.value = '';\n        this.userLogOutButton.disabled = false;\n        this.userDeleteButton.disabled = false;\n        this.userChangePasswordButton.disabled = false;\n        this.changePasswordWindow.style.visibility = 'hidden';\n        this.changePasswordWindowCancelButton.disabled = true;\n        this.changePasswordButton.disabled = true;\n    }\n\n\n    onLoad() {\n        /**\n         * POST:\n         * GET:\n         * if OK = true: json = {'ok': 'boolean', 'user_id': 'number', 'tasks': [\n         *                                          {\"task_id\": \"number\", 'task_text': 'string', 'status': 'string'},\n         *                                          ...\n         *                                          ]\n         *             }\n         * if OK = false: json = {'ok': 'boolean', 'error_code': 'number' or null,\n         * 'error_message': 'string' or null}\n         */\n        const loadTasks = (answer) => {\n            if (answer['ok'] === true) {\n                let userName = answer[\"user_name\"];\n                let tasksFromServer = answer['tasks'];\n\n                if (!this.userNameField.firstChild) {\n                    this.userNameField.appendChild(document.createTextNode(userName));\n                    this.userLogOutButton.disabled = false;\n                    this.userDeleteButton.disabled = false;\n                    this.userChangePasswordButton.disabled = false;\n                }\n\n                this.taskList = new TaskList(this, tasksFromServer);\n                // let taskInputButton = document.getElementById(\"task_input_button\");\n                //\n                // taskInputButton.onclick = () => {\n                //     this.taskList.addTask();\n                //     return false;\n                // }\n\n                // let tasksTree = this.taskList.tasksTree;\n                //\n                // for (let task of tasksFromServer) {\n                //     let taskId = task[\"task_id\"];\n                //     let taskText = task[\"task_text\"];\n                //     let taskStatus = task[\"task_status\"];\n                //     let parentId = task[\"parent_id\"];\n                //\n                //     tasksTree.set(taskId, new Task(this, this.taskList, taskId, taskText, parentId, taskStatus));\n                // }\n                //\n                // for (let task of tasksTree.values()) {\n                //     if (tasksTree.has(task.parentId)) {\n                //         tasksTree.get(task.parentId).subtasks.push(task);\n                //     } else {\n                //         this.taskList.tasks.push(task);\n                //     }\n                // }\n                //\n                // this.taskList.updateDom();\n\n            }\n            if (answer[\"error_code\"] === 401) {\n                this.forceLogOut();\n                showInfoWindow(\"Authorisation problem!\");\n            }\n        }\n        knock_knock('/load_tasks', loadTasks);\n    }\n\n    logIn() {\n        /**\n         * POST: json = {\"userName\": \"string\", \"password\": \"string\"}\n         * GET:\n         * if OK = true: json = {\"ok\": \"boolean\", \"user_id\": \"number\",\n         *                         \"tasks\": [{\"task_id\": \"number\", \"task_text\": \"string\", \"status\": \"boolean\"},\n         *                                  ..........] }\n         * if OK = false: json = {'ok': 'boolean', 'error_code': 'number' or null,\n         *                        'error_message': 'string' or null}\n         */\n\n        removeChildren(this.loginWindowInfo);\n\n        if (this.loginFormUsername.value && this.loginFormPassword.value) {\n            let userName = this.loginFormUsername.value;\n            let password = this.loginFormPassword.value;\n            const sendData = {\"userName\": userName, \"password\": password};\n\n            this.loginFormPassword.value = \"\";\n\n            const login = (answer) => {\n                if (answer[\"ok\"] === true) {\n                    let userName = answer[\"user_name\"];\n\n                    this.userNameField.appendChild(document.createTextNode(userName));\n                    this.userLogOutButton.disabled = false;\n                    this.userDeleteButton.disabled = false;\n                    this.userChangePasswordButton.disabled = false;\n\n                    this.hideLoginWindow();\n\n                    this.onLoad()\n                } else {\n                    this.loginWindowInfo.appendChild(document.createTextNode(answer[\"error_message\"]));\n                }\n            }\n            knock_knock('/user_login', login, sendData);\n        } else if (!this.loginFormUsername.value) {\n            this.loginWindowInfo.appendChild(document.createTextNode('Please, enter user name!'));\n        } else if (!this.loginFormPassword.value) {\n            this.loginWindowInfo.appendChild(document.createTextNode('Please, enter password!'))\n        }\n    }\n\n    logOut() {\n        const out = () => {\n            this.taskList = null;\n            document.cookie = \"id=; expires=-1\";\n            document.cookie = \"sign=; expires=-1\";\n\n            // let tasksParent = document.getElementById(\"main_tasks\");\n            // removeChildren(tasksParent);\n            ReactDOM.unmountComponentAtNode(document.getElementById('root'));\n            this.showLoginWindow();\n        }\n        let userLanguage = getCookie('lang');\n        let message = null;\n\n        if (userLanguage === 'ru') {\n            message = 'Вы уверены, что хотите выйти?';\n        } else if (userLanguage === 'en') {\n            message = 'Are you sure, you want to log out?';\n        }\n        showConfirmWindow(out, message);\n\n    }\n\n    forceLogOut() {\n        this.taskList = null;\n        document.cookie = 'id=; expires=-1';\n        document.cookie = 'sign=; expires=-1';\n\n        // let taskParent = document.getElementById('main_tasks');\n        // removeChildren(taskParent);\n        ReactDOM.unmountComponentAtNode(document.getElementById('root'));\n        this.showLoginWindow();\n    }\n\n    userDelete() {\n        const confirm = function () {\n            knock_knock(\"/user_delete\", del);\n        }\n\n        const del = (answer) => {\n            if (answer[\"ok\"] === true) {\n                this.forceLogOut();\n            }\n            if (answer[\"error_code\"] === 401) {\n                this.forceLogOut();\n                showInfoWindow(\"Authorisation problem!\");\n            }\n        }\n        let userLanguage = getCookie('lang');\n        let message = null;\n\n        if (userLanguage === 'ru') {\n            message = 'Вы уверены, что хотите удалить пользователя?';\n        } else if (userLanguage === 'en') {\n            message = 'Are you sure, you want to delete user?';\n        }\n        showConfirmWindow(confirm, message);\n    }\n\n    changePassword() {\n        removeChildren(this.changePasswordWindowInfo);\n\n        if (this.changePasswordFormOldPassword.value && this.changePasswordFormNewPassword.value && this.changePasswordFormNewPasswordConfirm.value) {\n            if (this.changePasswordFormNewPassword.value === this.changePasswordFormNewPasswordConfirm.value) {\n                let oldPassword = this.changePasswordFormOldPassword.value;\n                let newPassword = this.changePasswordFormNewPassword.value;\n\n                const sendData = {'oldPassword': oldPassword, 'newPassword': newPassword};\n\n                const change = (answer) => {\n                    if (answer['ok'] === true) {\n                        this.hideChangePasswordWindow();\n                        showInfoWindow('Password is successfully changed!');\n                    } else if (answer['error_code'] === 401) {\n                        this.hideChangePasswordWindow();\n                        this.forceLogOut();\n                        showInfoWindow('Authorisation problem!');\n                    } else {\n                        this.changePasswordWindowInfo.appendChild(document.createTextNode(answer['error_message']));\n                    }\n                }\n                knock_knock('/change_password', change, sendData);\n            } else {\n                this.changePasswordWindowInfo.appendChild(document.createTextNode('Passwords are not match!'));\n            }\n        } else if (!this.changePasswordFormOldPassword.value) {\n            this.changePasswordWindowInfo.appendChild(document.createTextNode('Please, enter your old password!'));\n        } else if (!this.changePasswordFormNewPassword.value) {\n            this.changePasswordWindowInfo.appendChild(document.createTextNode('Please, enter new password!'));\n        } else if (!this.changePasswordFormNewPasswordConfirm.value) {\n            this.changePasswordWindowInfo.appendChild(document.createTextNode('Please, confirm new password!'));\n        }\n    }\n\n    userRegister() {\n        /**\n         * POST: json =  {\"newUserName\": \"string\",  \"password\": \"string\"}\n         * GET: answer = json = {'ok': 'boolean', 'error_code': 'number' or null,\n     'error_message': 'string' or null}\n         */\n        removeChildren(this.registerWindowInfo);\n\n        if (this.registerFormUsername.value && this.registerFormPassword.value\n            && this.registerFormPasswordConfirm.value && this.agreementCheckbox.checked === true) {\n            if (this.registerFormPassword.value === this.registerFormPasswordConfirm.value) {\n                let newUserName = this.registerFormUsername.value;\n                let password = this.registerFormPassword.value;\n\n                const sendData = {\"newUserName\": newUserName, \"password\": password};\n\n                const register = (answer) => {\n                    if (answer['ok'] === true) {\n                        this.registerFormUsername.value = \"\";\n                        this.registerFormPassword.value = \"\";\n                        this.registerFormPasswordConfirm.value = \"\";\n                        this.registerWindowInfo.appendChild(document.createTextNode(\"New user \" + newUserName + \" successfully created!\"));\n                    } else if (answer['error_code'] === 1062) {\n                        this.registerWindowInfo.appendChild(document.createTextNode(\"Name \" + newUserName + \" is already used!\"));\n                    } else {\n                        this.registerWindowInfo.appendChild(document.createTextNode(answer['error_message'] + ' Код ошибки: ' + answer['error_code']));\n                    }\n                }\n                knock_knock('/user_register', register, sendData);\n            } else {\n                this.registerWindowInfo.appendChild(document.createTextNode('Passwords are not match!'));\n            }\n        } else if (!this.registerFormUsername.value) {\n            this.registerWindowInfo.appendChild(document.createTextNode('Please, enter new user name!'));\n        } else if (!this.registerFormPassword.value) {\n            this.registerWindowInfo.appendChild(document.createTextNode('Please, enter Password!'));\n        } else if (!this.registerFormPasswordConfirm.value) {\n            this.registerWindowInfo.appendChild(document.createTextNode('Please, confirm Password!'));\n        } else if (!this.agreementCheckbox.checked) {\n            this.registerWindowInfo.appendChild(document.createTextNode('Please, accept agreements!'));\n        }\n    }\n}\n\nclass TaskListReact extends React.Component {\n    constructor(props) {\n        super(props)\n        this.loginInst = this.props.loginInst;\n        this.taskListInst = this.props.taskListInst;\n        this.tasksTree = this.props.tasksTree;\n        this.tasks = this.props.tasks;\n        this.state = {\n            linearTasksList: this.makeLinearList(this.tasks),\n        }\n        this.linearTasksList = this.makeLinearList(this.tasks);\n        this.addTask = this.addTask.bind(this);\n        this.addSubtask = this.addSubtask.bind(this);\n        this.removeTask = this.removeTask.bind(this);\n        this.textInputField = React.createRef();\n    }\n\n    componentDidMount() {\n        console.log('mount');\n    }\n\n    componentWillUnmount() {\n        console.log('unmount');\n    }\n\n    makeLinearList(tasksList) {\n        let linearTasksList = [];\n\n        function recursionWalk(tasksList) {\n            for (let task of tasksList) {\n                linearTasksList.push(task);\n                if (task.subtasks.length > 0) {\n                    recursionWalk(task.subtasks);\n                }\n            }\n        }\n        recursionWalk(tasksList);\n\n        return linearTasksList;\n    }\n\n    /**\n     * POST: json = {'taskText': 'string', 'parentId' = 'number'}\n     * GET:\n     * if OK = true: json = {'ok': 'boolean', 'task_id': 'number'}\n     * if OK = false: json = {'ok': 'boolean', 'error_code': 'number' or null,\n     * 'error_message': 'string' or null}\n     */\n    addTask(e) {\n        e.preventDefault();\n        if (this.textInputField.current.value) {\n            let taskText = this.textInputField.current.value;\n            this.textInputField.current.value = '';\n            let sendData = {'taskText': taskText, 'parentId': null}\n\n            const add = (answer) => {\n                if (answer['ok'] === true) {\n                    let taskId = answer['task_id'];\n                    let newTask = new Task(taskId, taskText);\n\n                    this.tasksTree.set(newTask.id, newTask);\n                    this.tasks.push(newTask);\n\n                    this.setState({\n                        linearTasksList: this.makeLinearList(this.tasks),\n                    })\n                } else if (answer['error_code'] === 401) {\n                    this.loginInst.forceLogOut();\n                    showInfoWindow('Authorisation problem!');\n                }\n            }\n            knock_knock('/save_task', add, sendData);\n        }\n    }\n\n    /**\n     * POST: json = {'taskText': 'string', 'parentId' = 'number'}\n     * GET:\n     * if OK = true: json = {'ok': 'boolean', 'task_id': 'number'}\n     * if OK = false: json = {'ok': 'boolean', 'error_code': 'number' or null,\n     * 'error_message': 'string' or null}\n     */\n    addSubtask(subtaskParentId, subtaskText) {\n        let sendData = {'taskText': subtaskText, 'parentId': subtaskParentId}\n\n        const add = (answer) => {\n            if (answer['ok'] === true) {\n                let taskId = answer['task_id'];\n                let newTask = new Task(taskId, subtaskText, subtaskParentId);\n\n                this.tasksTree.set(taskId, newTask);\n                this.tasksTree.get(subtaskParentId).subtasks.push(newTask);\n\n                this.setState({\n                    linearTasksList : this.makeLinearList(this.tasks),\n                })\n            } else if (answer['error_code'] === 401) {\n                this.loginInst.forceLogOut();\n                showInfoWindow('Authorisation problem!');\n            }\n        }\n        knock_knock('/save_task', add, sendData);\n    }\n\n    /**\n     * POST: {taskId: 'number'}\n     * GET:\n     * if OK = true: json = {'ok': true}\n     * if OK = false: json = {'ok': 'boolean', 'error_code': 'number' or null,\n     * 'error_message': 'string' or null}\n     * @param task\n     */\n    removeTask(task) {\n        let sendData = {'taskId': task.id}\n        const remove = (answer) => {\n            if (answer['ok'] === true) {\n                if (this.tasksTree.has(task.parentId)) {\n                    let childrenList = this.tasksTree.get(task.parentId).subtasks;\n                    childrenList.splice(childrenList.indexOf(task), 1);\n                } else {\n                    this.tasks.splice(this.tasks.indexOf(task), 1);\n                }\n                this.setState({\n                    linearTasksList: this.makeLinearList(this.tasks),\n                })\n            } else if (answer['error_code'] === 401) {\n                this.loginInst.forceLogOut();\n                showInfoWindow('Authorisation problem!');\n            }\n        }\n        knock_knock('/delete_task', remove, sendData);\n    }\n\n    render() {\n        return (\n            <div className={'main_window'}>\n                <div className=\"task_input\">\n                    <form onSubmit={this.addTask}>\n                        <label htmlFor={'task_input_field'}/>\n                            <input type={'text'}\n                                   className={'task_input_field'}\n                                   onSubmit={this.addTask}\n                                   ref={this.textInputField}/>\n                            <button type={'button'}\n                                    className={'task_input_button'}\n                                    onClick={this.addTask}>\n                        <img src=\"/static/icons/add_sub.svg\" alt=\"+\"/>\n                    </button>\n                    </form>\n                </div>\n                <div className=\"main_tasks\"\n                     id={'main_tasks'}>\n                    {this.state.linearTasksList.map((task) => <TaskReact key={task.id.toString()}\n                                                                         loginInst={this.loginInst}\n                                                                         taskInst={task}\n                                                                         taskId={task.id}\n                                                                         status={task.status}\n                                                                         taskText={task.text}\n                                                                         parentId={task.parentId}\n                                                                         removeTaskFunc={this.removeTask}\n                                                                         addSubtaskFunc={this.addSubtask}/>)}\n                </div>\n            </div>\n        )\n    }\n}\n\nclass TaskReact extends React.Component {\n    constructor(props) {\n        super(props);\n        this.taskInst = this.props.taskInst;\n        this.loginInst = this.props.loginInst;\n        this.taskId = this.props.taskId;\n        this.shadow = shadow();\n        this.state = {\n            status: this.props.status,\n            showSubtaskDivButtonZIndex: '0',\n            showSubtaskDivButtonDisabled: false,\n            taskTextValue: this.props.taskText,\n            taskTextOpacity: '1',\n            removeTaskButtonDisabled: false,\n            removeTaskButtonScale: 'scale(1)',\n            removeTaskButtonTransitionDelay: '0',\n            subtaskDivShowed: false,\n            subtaskDivVisibility: 'hidden',\n            subtaskTimerShow: null,\n            subtaskTimerHide: null,\n            subtaskTextFieldOpacity: '0',\n            subtaskTextFieldWidth: '0',\n            addSubtaskButtonDisabled: true,\n            addSubtaskButtonOpacity: '0',\n            addSubtaskButtonScale: 'scale(0)',\n            addSubtaskButtonTransitionDelay: '0.2s',\n            taskTextEditDivShowed: false,\n            taskTextEditDivVisibility: 'hidden',\n            taskTextEditFieldWidth: '0',\n            taskTextEditFieldOpacity: '0',\n            taskTextEditFieldScale: 'scale(0)',\n            saveEditButtonScale: 'scale(0)',\n            saveEditButtonTransitionDelay: '0',\n        }\n        this.finishTask = this.finishTask.bind(this);\n        this.removeTask = this.removeTask.bind(this);\n        this.showEditTaskField = this.showEditTaskField.bind(this);\n        this.saveEdit = this.saveEdit.bind(this);\n        this.showSubtaskField = this.showSubtaskField.bind(this);\n        this.addSubtask = this.addSubtask.bind(this);\n        this.addSubtaskField = React.createRef();\n        this.editTaskField = React.createRef();\n    }\n\n    /**\n     * POST: json = {'task_id': 'number', 'status': 'boolean'}\n     * GET:\n     * if OK = true: json = {'ok': true}\n     * if OK = false: json = {'ok': 'boolean', 'error_code': 'number' or null,\n     * 'error_message': 'string' or null}\n     */\n    finishTask() {\n        let taskStatus = this.state.status === false;\n        let sendData = {\n            'taskId': this.taskId,\n            'status': taskStatus\n        };\n        const finish = (answer) => {\n            if (answer['ok'] === true) {\n                this.setState({\n                    status: taskStatus\n                });\n            } else if (answer['error_code'] === 401) {\n                this.loginInst.forceLogOut();\n                showInfoWindow('Authorisation problem!');\n            }\n        }\n        knock_knock('/finish_task', finish, sendData);\n    }\n\n    removeTask() {\n        this.props.removeTaskFunc(this.taskInst);\n    }\n\n    showSubtaskField() {\n        if (this.state.subtaskDivShowed === false) {\n            this.shadow();\n            this.subtaskDivHideTimer = clearTimeout(this.subtaskDivHideTimer);\n            this.setState({\n                subtaskDivShowed: true,\n                showSubtaskDivButtonZIndex: '1',\n                removeTaskButtonDisabled: true,\n                removeTaskButtonScale: 'scale(0)',\n                removeTaskButtonTransitionDelay: '0s',\n                taskTextOpacity: '0.2',\n                subtaskDivVisibility: 'visible',\n                subtaskTextFieldOpacity: '1',\n                subtaskTextFieldWidth: '65%',\n                addSubtaskButtonDisabled: false,\n                addSubtaskButtonOpacity: '1',\n                addSubtaskButtonScale: 'scale(1)',\n                addSubtaskButtonTransitionDelay: '0.2s',\n            })\n        } else {\n            this.shadow();\n            this.setState({\n                subtaskDivShowed: false,\n\n                removeTaskButtonDisabled: false,\n                removeTaskButtonScale: 'scale(1)',\n                removeTaskButtonTransitionDelay: '0.2s',\n                taskTextOpacity: '1',\n                subtaskTextFieldOpacity: '0',\n                subtaskTextFieldWidth: '0',\n                addSubtaskButtonDisabled: true,\n                addSubtaskButtonOpacity: '0',\n                addSubtaskButtonScale: 'scale(0)',\n                addSubtaskButtonTransitionDelay: '0s',\n            })\n            this.subtaskDivHideTimer = setTimeout(() => {\n                this.setState({\n                    subtaskDivVisibility: 'hidden',\n                    showSubtaskDivButtonZIndex: '0',\n                });\n            }, 700);\n        }\n    }\n\n    addSubtask() {\n        if (this.addSubtaskField.current.value) {\n            let subtaskText = this.addSubtaskField.current.value;\n            this.addSubtaskField.current.value = '';\n\n            this.showSubtaskField();\n\n            this.props.addSubtaskFunc(this.taskId, subtaskText);\n\n        }\n    }\n\n    showEditTaskField() {\n        if (this.state.taskTextEditDivShowed === false) {\n            this.shadow();\n            this.hideEditDivTimer = clearTimeout(this.hideEditDivTimer);\n            this.setState({\n                taskTextEditDivShowed: true,\n                showSubtaskDivButtonDisabled: true,\n                taskTextEditDivVisibility: 'visible',\n                taskTextEditFieldOpacity: '1',\n                taskTextEditFieldScale: 'scale(1)',\n                taskTextEditFieldWidth: '65%',\n                removeTaskButtonScale: 'scale(0)',\n                removeTaskButtonTransitionDelay: '0s',\n                saveEditButtonScale: 'scale(1)',\n                saveEditButtonTransitionDelay: '0.2s',\n                taskTextOpacity: '0.2',\n            })\n            this.editTaskField.current.value = this.state.taskTextValue;\n        } else {\n            if (this.editTaskField.current.value !== this.state.taskTextValue) {\n                let sendData = {\n                    'taskId': this.props.taskId,\n                    'taskText': this.editTaskField.current.value\n                };\n\n                const saveEdit = (answer) => {\n                    if (answer['ok'] === true) {\n                        this.setState({\n                            taskTextValue: this.editTaskField.current.value,\n                        })\n                    } else if (answer['error_code'] === 401) {\n                        this.loginInst.forceLogOut();\n                        showInfoWindow('Authorisation problem!');\n                    }\n                }\n                knock_knock('/save_edit_task', saveEdit, sendData);\n            }\n            this.shadow();\n            this.setState({\n                taskTextEditDivShowed: false,\n                showSubtaskDivButtonDisabled: false,\n                taskTextEditFieldOpacity: '0',\n                taskTextEditFieldScale: 'scale(0)',\n                taskTextEditFieldWidth: '0',\n                removeTaskButtonScale: 'scale(1)',\n                removeTaskButtonTransitionDelay: '0.2s',\n                saveEditButtonScale: 'scale(0)',\n                saveEditButtonTransitionDelay: '0s',\n                taskTextOpacity: '1',\n            })\n            this.hideEditDivTimer = setTimeout(() => {\n                this.setState({\n                    taskTextEditDivVisibility: 'hidden',\n                })\n            }, 700);\n        }\n    }\n\n    saveEdit(e) {\n        if (e.keyCode === 13) {\n            this.showEditTaskField();\n        }\n    }\n\n    render() {\n        return (\n            <div className={this.state.status === false ? 'task_div_content' : 'task_div_content finished_task'}>\n                <button className={'task_finish_button'}\n                        type={'button'}\n                        onClick={this.finishTask}>\n                    <img src=\"/static/icons/check.svg\" alt=\"V\"/>\n                </button>\n                <button className={'show_subtask_input_button'}\n                        style={\n                            {\n                                zIndex: this.state.showSubtaskDivButtonZIndex,\n                            }\n                        }\n                        onClick={this.showSubtaskField}\n                        disabled={this.state.showSubtaskDivButtonDisabled}>+</button>\n                <p className={'task_text'}\n                   style={\n                       {\n                           opacity: this.state.taskTextOpacity,\n                       }\n                   }\n                   onClick={this.showEditTaskField}>{this.state.taskTextValue}</p>\n                <button className={'remove_task_button'}\n                        style={\n                            {\n                                transform: this.state.removeTaskButtonScale,\n                                transitionDelay: this.state.removeTaskButtonTransitionDelay,\n                            }\n                        }\n                        disabled={this.state.removeTaskButtonDisabled}\n                        type={'button'}\n                        onClick={this.removeTask}>\n                    <img src=\"/static/icons/delete.svg\" alt=\"\"/>\n                </button>\n                <div className={'subtask_div'} style={{visibility: this.state.subtaskDivVisibility}}>\n                    <input className={'subtask_text_field'}\n                           type=\"text\"\n                           style={\n                               {\n                                   width: this.state.subtaskTextFieldWidth,\n                                   opacity: this.state.subtaskTextFieldOpacity,\n                               }\n                           }\n                           ref={this.addSubtaskField}/>\n                    <button className={'add_subtask_button'}\n                            type={'button'}\n                            style={\n                                {\n                                    opacity: this.state.addSubtaskButtonOpacity,\n                                    transform: this.state.addSubtaskButtonScale,\n                                    transitionDelay: this.state.addSubtaskButtonTransitionDelay,\n                                }\n                            }\n                            disabled={this.state.addSubtaskButtonDisabled}\n                            onClick={this.addSubtask}>\n                        <img src=\"/static/icons/add_sub.svg\" alt=\"+\"/>\n                    </button>\n                </div>\n                <div className={'task_text_edit_div'}\n                     style={\n                         {\n                             visibility: this.state.taskTextEditDivVisibility,\n                         }\n                     }>\n                    <input className={'task_text_edit_field'}\n                           style={\n                               {\n                                   opacity: this.state.taskTextEditFieldOpacity,\n                                   width: this.state.taskTextEditFieldWidth,\n                                   transform: this.state.taskTextEditFieldScale,\n                               }\n                           }\n                           type={'text'}\n                           ref={this.editTaskField}\n                           onKeyDown={this.saveEdit}\n                    />\n                    <button className={'save_edit_button'}\n                            style={\n                                {\n                                    transform: this.state.saveEditButtonScale,\n                                    transitionDelay: this.state.saveEditButtonTransitionDelay,\n                                }\n                            }\n                            type={'button'}\n                            onClick={this.showEditTaskField}>\n                        <img src='/static/icons/edit.svg' alt='+'/>\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\n//TODO Maybe compile class LoadingWindow and knock_knock function together????\nclass LoadingWindow {\n    constructor() {\n        this.isAlive = false;\n        this.reqCount = 0;\n        this.timerShow = undefined;\n        this.timerHide = undefined;\n        this.startTime = undefined;\n        this.stopTime = undefined;\n    }\n\n    showWindow(loadingWindow) {\n        this.reqCount++;\n        if (this.reqCount === 1) {\n            this.timerHide = clearTimeout(this.timerHide);\n            this.timerShow = setTimeout(() => {\n                loadingWindow.style.visibility = 'visible';\n                this.startTime = Date.now();\n                this.isAlive = true;\n            }, 200);\n        }\n    }\n\n    hideWindow(loadingWindow) {\n        if (this.reqCount > 0) {\n            this.reqCount--;\n            this.stopTime = Date.now();\n        }\n        if (this.reqCount === 0) {\n            this.timerShow = clearTimeout(this.timerShow);\n            if (this.isAlive) {\n                if (this.stopTime - this.startTime >= 200) {\n                    loadingWindow.style.visibility = 'hidden';\n                    this.isAlive = false;\n                } else {\n                    this.timerHide = setTimeout(() => {\n                        loadingWindow.style.visibility = 'hidden';\n                        this.isAlive = false;\n                    }, 200 - (this.stopTime - this.startTime));\n                }\n            }\n        }\n    }\n}\n"]}