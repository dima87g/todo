{"version":3,"sources":["../todo_classes.js"],"names":[],"mappings":"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","file":"todo_classes_compiled.js","sourcesContent":["'use strict';\n\nclass Task {\n    constructor(id, text, parentId = null, status = false) {\n        this.id = id;\n        this.text = text;\n        this.parentId = parentId;\n        this.status = status;\n        this.subtasks = [];\n    }\n}\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.confirmWindowFunction = null;\n        this.state = {\n            shadowModalIsVisible: false,\n            confirmWindowIsVisible: false,\n            confirmWindowMessage: '',\n        }\n        this.authCheck = this.authCheck.bind(this);\n        this.showConfirmWindow = this.showConfirmWindow.bind(this);\n        this.confirmWindowClick = this.confirmWindowClick.bind(this);\n        this.knockKnock = this.knockKnock.bind(this);\n        this.login = React.createRef();\n        this.loadingWindow = React.createRef();\n    }\n\n    componentDidMount() {\n        this.authCheck();\n    }\n\n    authCheck() {\n        const responseHandler = (response) => {\n            if (response.status === 200 && response.data['ok'] === true) {\n                this.login.current.createTaskList();\n                this.login.current.hideLoginWindow();\n            } else {\n                showCookiesAlertWindow();\n                this.setState({\n                    shadowModalIsVisible: true,\n                });\n            }\n        }\n        this.knockKnock('/auth_check', responseHandler);\n    }\n\n    removeChildren(element) {\n        while (element.firstChild) {\n            element.removeChild(element.firstChild)\n        }\n    }\n\n    showConfirmWindow(message, func) {\n        this.showShadowModal();\n        this.confirmWindowFunction = func;\n\n        this.setState({\n            confirmWindowIsVisible: true,\n            confirmWindowMessage: message,\n        });\n    }\n\n    confirmWindowClick(e) {\n        if (e.target.value === 'ok') {\n            this.hideShadowModal();\n            this.confirmWindowFunction()\n        } else {\n            this.hideShadowModal();\n        }\n        this.confirmWindowFunction = null;\n        this.setState({\n            confirmWindowIsVisible: false,\n        })\n    }\n\n    showShadowModal() {\n        this.setState({\n            shadowModalIsVisible: true,\n        });\n    }\n\n    hideShadowModal() {\n        this.setState({\n            shadowModalIsVisible: false,\n        })\n    }\n\n    knockKnock(path, func, sendData) {\n        const req = axios.default;\n        this.loadingWindow.current.showWindow();\n        req.post(path, sendData)\n            .then((response) => {\n                this.loadingWindow.current.hideWindow();\n                if (response.headers['content-type'] === 'application/json') {\n                    func(response);\n                }\n            })\n            .catch((error) => {\n                this.loadingWindow.current.hideWindow();\n                console.log(error);\n                func(error.response);\n            })\n    }\n\n    render() {\n        let shadowStyle;\n        let confirmWindowStyle;\n\n        if (this.state.shadowModalIsVisible) {\n            shadowStyle = 'shadow_main shadow_visible';\n        } else {\n            shadowStyle = 'shadow_main shadow_hidden';\n        }\n\n        if (this.state.confirmWindowIsVisible) {\n            confirmWindowStyle = 'confirm_window confirm_window_visible';\n        } else {\n            confirmWindowStyle = 'confirm_window confirm_window_hidden';\n        }\n        return (\n            <div className={'app'} id={'app'}>\n                <LoginReact app={this}\n                            ref={this.login}/>\n                <div id={\"confirm_window\"} className={confirmWindowStyle}>\n                    <p id={\"confirm_window_message\"}\n                       className={'confirm_window_message'}>\n                        {this.state.confirmWindowMessage}\n                    </p>\n                    <button type=\"button\"\n                            className=\"confirm_window_ok_button\"\n                            id=\"confirm_window_ok_button\"\n                            value=\"ok\"\n                            onClick={this.confirmWindowClick}>\n                        OK\n                    </button>\n                    <button type=\"button\"\n                            className=\"confirm_window_cancel_button\"\n                            id=\"confirm_window_cancel_button\"\n                            value='cancel'\n                            onClick={this.confirmWindowClick}>\n                        {localisation['confirm_window']['cancel_button']}\n                    </button>\n                </div>\n                <div className=\"info_window\" id=\"info_window\">\n                    <p className=\"info_window_message\" id=\"info_window_message\"/>\n                </div>\n                <LoadingWindowReact ref={this.loadingWindow}/>\n                <div id={'shadow'}\n                     className={shadowStyle}\n                />\n                <div className={\"cookies_alert_window\"} id={\"cookies_alert_window\"}>\n                    <p className={\"cookies_alert_window_text\"} id={\"cookies_alert_window_text\"}/>\n                    <button type={\"button\"}\n                            className={\"cookies_alert_confirm_button\"}\n                            id={\"cookies_alert_confirm_button\"}>\n                        OK\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass LoginReact extends React.Component {\n    constructor(props) {\n        super(props);\n        this.app = this.props.app;\n        this.state = {\n            userLogOutButtonDisabled: true,\n            userDeleteButtonDisabled: true,\n            changePasswordButtonDisabled: true,\n            authMenuShowed: true,\n            loginWindowShowed: true,\n            loginWindowSwitchButtonDisabled: false,\n            registerWindowShowed: false,\n            registerWindowSwitchButtonDisabled: true,\n            changePasswordWindowShowed: false,\n            changePasswordWindowCancelButtonDisabled: true,\n            changePasswordWindowSubmitButtonDisabled: true,\n        }\n        this.switchLogin = this.switchLogin.bind(this);\n        this.hideLoginWindow = this.hideLoginWindow.bind(this);\n        this.login = this.login.bind(this);\n        this.logOut = this.logOut.bind(this);\n        this.userDelete = this.userDelete.bind(this);\n        this.changePasswordWindow = this.changePasswordWindow.bind(this);\n        this.changePassword = this.changePassword.bind(this);\n        this.userRegister = this.userRegister.bind(this);\n        this.loginFormInfo = React.createRef();\n        this.registerFormInfo = React.createRef();\n        this.changePasswordFormInfo = React.createRef();\n        this.userNameField = React.createRef();\n    }\n\n    switchLogin(e) {\n        if (e.target.value === 'register') {\n            this.setState({\n                loginWindowShowed: false,\n                loginWindowSwitchButtonDisabled: true,\n                registerWindowShowed: true,\n            });\n            setTimeout(() => {\n                this.setState({\n                    registerWindowSwitchButtonDisabled: false,\n                });\n            }, 500);\n            document.forms['login_form'].reset();\n            this.app.removeChildren(this.loginFormInfo.current);\n        } else {\n            this.setState({\n                loginWindowShowed: true,\n                registerWindowShowed: false,\n                registerWindowSwitchButtonDisabled: true,\n            });\n            setTimeout(() => {\n                this.setState({\n                    loginWindowSwitchButtonDisabled: false,\n                });\n            }, 500);\n            document.forms['register_form'].reset();\n            this.app.removeChildren(this.registerFormInfo.current);\n        }\n    }\n\n    hideLoginWindow() {\n        document.forms['login_form'].reset();\n        document.forms['register_form'].reset();\n        this.app.removeChildren(this.loginFormInfo.current);\n        this.app.hideShadowModal();\n\n        this.setState({\n            authMenuShowed: false,\n            loginWindowShowed: false,\n            registerWindowShowed: false,\n            userLogOutButtonDisabled: false,\n            userDeleteButtonDisabled: false,\n            changePasswordButtonDisabled: false,\n        })\n    }\n\n    showLoginWindow() {\n        this.app.removeChildren(this.userNameField.current);\n\n        this.app.showShadowModal();\n\n        this.setState({\n            authMenuShowed: true,\n            loginWindowShowed: true,\n            userLogOutButtonDisabled: true,\n            userDeleteButtonDisabled: true,\n            changePasswordButtonDisabled: true,\n        })\n    }\n\n    login(e) {\n        e.preventDefault();\n\n        this.app.removeChildren(this.loginFormInfo.current);\n\n        const userName = e.target['login_form_username'].value;\n        const password = e.target['login_form_password'].value;\n\n        if (userName && password) {\n            const data = {'userName': userName, 'password': password}\n            const loginResponseHandler = (response) => {\n                if (response.status === 200) {\n                    this.createTaskList();\n                    this.hideLoginWindow();\n                } else if (response.status === 401) {\n                    this.loginFormInfo.current.appendChild(document.createTextNode(response.data['error_message']));\n                }\n            }\n            this.app.knockKnock('/user_login', loginResponseHandler, data);\n        } else if (!userName) {\n            this.loginFormInfo.current.appendChild(document.createTextNode('Please, enter user name!'));\n        } else if (!password) {\n            this.loginFormInfo.current.appendChild(document.createTextNode('Please, enter password!'));\n        }\n    }\n\n    createTaskList() {\n        const responseHandler = (response) => {\n            if (response.status === 200) {\n                let userName = response.data['user_name'];\n                let tasksFromServer = response.data['tasks'];\n\n                this.userNameField.current.appendChild(document.createTextNode('User: ' + userName));\n\n                ReactDOM.render(\n                    <TaskListReact app={this.app}\n                                   login={this}\n                                   tasksFromServer={tasksFromServer}/>, document.getElementById('task_list'));\n            } else if (response.status === 401) {\n                this.login.current.forceLogOut();\n                showInfoWindow('Authorisation problem!');\n            }\n        }\n        this.app.knockKnock('/load_tasks', responseHandler);\n    }\n\n    logOut() {\n        const confirmFunction = () => {\n        document.cookie = 'id=; expires=-1';\n        document.cookie = 'id=; expires=-1';\n\n        ReactDOM.unmountComponentAtNode(document.getElementById('task_list'));\n\n        this.showLoginWindow();\n        }\n        let userLanguage = getCookie('lang');\n        let message = null;\n\n        if (userLanguage === 'ru') {\n            message = 'Вы уверены, что хотите выйти?';\n        } else {\n            message = 'Are you sure, you want to logOut?';\n        }\n\n        this.app.showConfirmWindow(message, confirmFunction);\n\n    }\n\n    userDelete() {\n        let userLanguage = getCookie('lang');\n        let message = null;\n\n        if (userLanguage === 'ru') {\n            message = 'Выуверены, что хотите удалить пользователя?';\n        } else {\n            message = 'Are you sure, you want to delete user?';\n        }\n        const responseHandler = (response) => {\n            if (response.status === 200) {\n                this.forceLogOut();\n            } else if (response.status === 401) {\n                this.forceLogOut();\n                showInfoWindow('Authorisation problem!');\n            }\n        }\n\n        const confirmFunction = () => {\n            this.app.knockKnock('/user_delete', responseHandler);\n        }\n\n        this.app.showConfirmWindow(message, confirmFunction);\n    }\n\n    changePasswordWindow() {\n        if (this.state.changePasswordWindowShowed === false) {\n            this.showLoginWindow();\n\n            this.setState({\n                changePasswordWindowShowed: true,\n                loginWindowShowed: false,\n                registerWindowShowed: false,\n                changePasswordWindowCancelButtonDisabled: false,\n                changePasswordWindowSubmitButtonDisabled: false,\n            })\n        } else {\n            this.hideLoginWindow();\n            this.setState({\n                changePasswordWindowShowed: false,\n                changePasswordWindowCancelButtonDisabled: true,\n                changePasswordWindowSubmitButtonDisabled: true,\n            })\n        }\n    }\n    /**\n     * POST: json =  {\"oldPassword\": \"string\",  \"newPassword\": \"string\"}\n     * GET: answer = json = {'ok': 'boolean', 'error_code': 'number' or null, 'error_message': 'string' or null}\n     */\n    changePassword(e) {\n        e.preventDefault();\n\n        this.app.removeChildren(this.changePasswordFormInfo.current);\n\n        let oldPassword = e.target['change_password_form_old_password'].value;\n        let newPassword = e.target['change_password_form_new_password'].value;\n        let newPasswordConfirm = e.target['change_password_form_new_password_confirm'].value;\n\n        const responseHandler = (response) => {\n            if (response.status === 200 && response.data['ok'] === true) {\n                this.changePasswordWindow();\n                showInfoWindow('Password is changed!');\n            } else if (response.status === 401) {\n                this.forceLogOut();\n                showInfoWindow('Authorisation problem!');\n            } else {\n                this.changePasswordFormInfo.current.appendChild(document.createTextNode(response.data['error_message']));\n            }\n            e.target.reset();\n        }\n\n        if (oldPassword && newPassword && newPasswordConfirm) {\n            if (newPassword === newPasswordConfirm) {\n                const sendData = {'oldPassword': oldPassword, 'newPassword': newPassword};\n\n                this.app.knockKnock('change_password', responseHandler, sendData);\n            } else {\n                this.changePasswordFormInfo.current.appendChild(document.createTextNode('Passwords are not match!'));\n            }\n        } else if (!oldPassword) {\n            this.changePasswordFormInfo.current.appendChild(document.createTextNode('Please, enter old password!'));\n        }else if (!newPassword) {\n            this.changePasswordFormInfo.current.appendChild(document.createTextNode('Please, enter new password!'));\n        }else if (!newPasswordConfirm) {\n            this.changePasswordFormInfo.current.appendChild(document.createTextNode('Please, confirm new password!'));\n        }\n    }\n\n    /**\n     * POST: json =  {\"newUserName\": \"string\",  \"password\": \"string\"}\n     * GET: answer = json = {'ok': 'boolean', 'error_code': 'number' or null, 'error_message': 'string' or null}\n     */\n    userRegister(e) {\n        e.preventDefault();\n\n        this.app.removeChildren(this.registerFormInfo.current);\n\n        let userName = e.target['register_form_username'].value;\n        let password = e.target['register_form_password'].value;\n        let confirmPassword = e.target['register_form_password_confirm'].value;\n        let agreementCheckbox = e.target['agreement_checkbox'];\n\n        const handleResponse = (response) => {\n            if (response.status === 200) {\n                if (response.data['ok'] === true) {\n                    this.registerFormInfo.current.appendChild(document.createTextNode('New user ' + userName + ' register!'));\n                }\n            }\n        }\n\n        if (userName && password && confirmPassword && agreementCheckbox.checked) {\n            if (password === confirmPassword) {\n                const sendData = {'newUserName': userName, 'password': password};\n\n                this.app.knockKnock('/user_register', handleResponse, sendData);\n            } else {\n                this.registerFormInfo.current.appendChild(document.createTextNode('Passwords are not match!'));\n            }\n        } else if (!userName) {\n            this.registerFormInfo.current.appendChild(document.createTextNode('Please, enter user name!'));\n        } else if (!password) {\n            this.registerFormInfo.current.appendChild(document.createTextNode('Please, enter password!'));\n        } else if (!confirmPassword) {\n            this.registerFormInfo.current.appendChild(document.createTextNode('Please, confirm password!'));\n        } else if (!agreementCheckbox.checked) {\n            this.registerFormInfo.current.appendChild(document.createTextNode('Please, accept the agreements!'));\n        }\n    }\n\n    forceLogOut() {\n        document.cookie = 'id=; expires=-1';\n        document.cookie = 'id=; expires=-1';\n\n        ReactDOM.unmountComponentAtNode(document.getElementById('task_list'));\n\n        this.showLoginWindow();\n        console.log('Force logOut!!!!!');\n    }\n\n    render() {\n        let authMenuStyle;\n        let loginWindowStyle;\n        let registerWindowStyle;\n        let changePasswordWindowStyle;\n\n        if (this.state.authMenuShowed) {\n            authMenuStyle = 'auth_menu auth_menu_visible';\n        } else {\n            authMenuStyle = 'auth_menu auth_menu_hidden';\n        }\n\n        if (this.state.loginWindowShowed) {\n            loginWindowStyle = 'login_window login_window_visible';\n        } else {\n            loginWindowStyle = 'login_window login_window_hidden';\n        }\n\n        if (this.state.registerWindowShowed) {\n            registerWindowStyle = 'register_window register_window_visible';\n        } else {\n            registerWindowStyle = 'register_window register_window_hidden';\n        }\n\n        if (this.state.changePasswordWindowShowed) {\n            changePasswordWindowStyle = 'change_password_window change_password_window_visible';\n        } else {\n            changePasswordWindowStyle = 'change_password_window change_password_window_hidden'\n        }\n        return (\n            <div className={'main'} id={'main'}>\n                <div id={'auth_menu'}\n                     className={authMenuStyle}\n                >\n                    <div id={'login_window'} className={loginWindowStyle}>\n                        <p className=\"auth_menu_forms_labels\">{localisation['login_window']['label']}</p>\n                        <form name=\"login_form\" onSubmit={this.login}>\n                            <label htmlFor=\"login_form_username\"\n                                   className={\"auth_menu_labels\"}>{localisation['login_window']['user_name']}</label>\n                            <input type=\"text\" name=\"login_form_username\"\n                                   className={\"login_form_username\"}\n                                   id={\"login_form_username\"}\n                                   placeholder={localisation['login_window']['user_name_placeholder']}\n                                   autoComplete={'off'}/>\n                            <label htmlFor=\"login_form_password\"\n                                   className={\"auth_menu_labels\"}>{localisation['login_window']['password']}</label>\n                            <input type=\"password\" name=\"login_form_password\"\n                                   className={\"login_form_password\"}\n                                   id={\"login_form_password\"}\n                                   placeholder={localisation['login_window']['password_placeholder']}\n                            />\n                            <button type={\"submit\"}\n                                    className={\"login_form_button\"}\n                                    id={\"login_form_button\"}>\n                                {localisation['login_window']['submit_button']}\n                            </button>\n                        </form>\n                        <p className=\"login_window_info\"\n                           id=\"login_window_info\"\n                           ref={this.loginFormInfo}\n                        />\n                        <button type=\"button\"\n                                className={\"switch_to_register_button\"}\n                                id={\"switch_to_register_button\"}\n                                value={'register'}\n                                disabled={this.state.loginWindowSwitchButtonDisabled}\n                                onClick={this.switchLogin}>\n                            {localisation['login_window']['switch_to_register_button']}\n                        </button>\n                    </div>\n                    <div id={'register_window'}\n                         className={registerWindowStyle}\n                    >\n                        <p className={\"auth_menu_forms_labels\"}>{localisation['register_window']['label']}</p>\n                        <form name=\"register_form\" onSubmit={this.userRegister}>\n                            <label htmlFor=\"register_form_username\"\n                                   className={\"auth_menu_labels\"}>{localisation['register_window']['user_name']}</label>\n                            <input type=\"text\"\n                                   name={\"register_form_username\"}\n                                   id={\"register_form_username\"}\n                                   className={\"register_form_username\"}\n                                   placeholder={localisation['register_window']['user_name_placeholder']}\n                                   autoComplete={'off'}/>\n                            <label htmlFor={\"register_form_password\"}\n                                   className={\"auth_menu_labels\"}>{localisation['register_window']['password']}</label>\n                            <input type={\"password\"}\n                                   name={\"register_form_password\"}\n                                   id={\"register_form_password\"}\n                                   className={\"register_form_password\"}\n                                   placeholder={localisation['register_window']['password_placeholder']}/>\n                            <label htmlFor={\"register_form_password_confirm\"}\n                                   className={\"auth_menu_labels\"}>{localisation['register_window']['password_confirm']}</label>\n                            <input type={\"password\"}\n                                   name={\"register_form_password_confirm\"}\n                                   id={\"register_form_password_confirm\"}\n                                   className={\"register_form_password_confirm\"}\n                                   placeholder={localisation['register_window']['password_confirm_placeholder']}/>\n                            <p className={\"agreement\"} id={\"agreement\"}>\n                                <input type={\"checkbox\"} id={\"agreement_checkbox\"} name={'agreement_checkbox'}/>\n                                <label htmlFor=\"agreement_checkbox\">&nbsp;{localisation['register_window']['agreement_label']}&nbsp;\n                                    <a href=\"../static/agreements/agreement_ru.html\"\n                                       target=\"_blank\">{localisation['register_window']['agreement_link']}</a></label></p>\n                            <button type={\"submit\"}\n                                    id={\"register_form_button\"}\n                                    className={\"register_form_button\"}>\n                                {localisation['register_window']['create_button']}\n                            </button>\n                        </form>\n                        <p className={\"register_window_info\"}\n                           id={\"register_window_info\"}\n                           ref={this.registerFormInfo}/>\n                        <button type={\"button\"}\n                                className={\"login_button\"}\n                                id={\"login_button\"}\n                                value={'login'}\n                                disabled={this.state.registerWindowSwitchButtonDisabled}\n                                onClick={this.switchLogin}>\n                            {localisation['register_window']['switch_to_login_button']}\n                        </button>\n                    </div>\n                    <div\n                        id={\"change_password_window\"}\n                        className={changePasswordWindowStyle}\n                    >\n                        <button type={\"button\"} id={\"change_password_window_cancel_button\"}\n                                className={\"change_password_window_cancel_button\"}\n                                disabled={this.state.changePasswordWindowCancelButtonDisabled}\n                                onClick={this.changePasswordWindow}>X\n                        </button>\n                        <p className={\"auth_menu_forms_labels\"}>{localisation['change_password_window']['label']}</p>\n                        <form name={\"change_password_form\"} onSubmit={this.changePassword}>\n                            <label htmlFor={\"change_password_form_old_password\"}\n                                   className={\"auth_menu_labels\"}>{localisation['change_password_window']['old_password']}</label>\n                            <input type={\"password\"}\n                                   name={\"change_password_form_old_password\"}\n                                   id={\"change_password_form_old_password\"}\n                                   className={\"change_password_form_old_password\"}\n                                   placeholder={localisation['change_password_window']['old_password_placeholder']}/>\n                            <label htmlFor={\"change_password_form_new_password\"}\n                                   className={\"auth_menu_labels\"}>{localisation['change_password_window']['new_password']}</label>\n                            <input type={\"password\"}\n                                   name={\"change_password_form_new_password\"}\n                                   id={\"change_password_form_new_password\"}\n                                   className={\"change_password_form_new_password\"}\n                                   placeholder={localisation['change_password_window']['new_password_placeholder']}/>\n                            <label htmlFor={\"change_password_form_new_password_confirm\"}\n                                   className={\"auth_menu_labels\"}>{localisation['change_password_window']['new_password_confirm']}</label>\n                            <input type={\"password\"}\n                                   name={\"change_password_form_new_password_confirm\"}\n                                   id={\"change_password_form_new_password_confirm\"}\n                                   className={\"change_password_form_new_password_confirm\"}\n                                   placeholder={localisation['change_password_window']['new_password_confirm_placeholder']}/>\n                            <button type={\"submit\"} value={\"Change password\"} id={\"change_password_form_button\"}\n                                    className={\"change_password_form_button\"}\n                                    disabled={this.state.changePasswordWindowSubmitButtonDisabled}>\n                                {localisation['change_password_window']['change_password_button']}\n                            </button>\n                        </form>\n                        <p className={\"change_password_window_info\"}\n                           id={\"change_password_window_info\"}\n                           ref={this.changePasswordFormInfo}/>\n                    </div>\n                </div>\n                <div className={\"header\"} id={'header'}>\n                    <a href=\"/ru\" className={'language_switch_button'}>Русский</a>\n                    <a href=\"/en\" className={'language_switch_button'}>English</a>\n                    <p className={\"user_name_field\"}\n                       id={'user_name_field'}\n                       ref={this.userNameField}/>\n                    <input type=\"button\"\n                           className='user_logout_button'\n                           id='user_logout_button'\n                           value={localisation['buttons']['logout']}\n                           disabled={this.state.userLogOutButtonDisabled}\n                           onClick={this.logOut}/>\n                    <input type=\"button\"\n                           className=\"user_delete_button\"\n                           id=\"user_delete_button\"\n                           value={localisation['buttons']['delete_user']}\n                           disabled={this.state.userDeleteButtonDisabled}\n                           onClick={this.userDelete}/>\n                    <input type=\"button\"\n                           className=\"change_password_button\"\n                           id=\"change_password_button\"\n                           value={localisation['buttons']['change_password']}\n                           disabled={this.state.changePasswordButtonDisabled}\n                           onClick={this.changePasswordWindow}/>\n                    <p className=\"version\">Ver. 1.8</p>\n                </div>\n                <div className={'task_list'} id={'task_list'}/>\n            </div>\n        )\n    }\n}\n\nclass TaskListReact extends React.Component {\n    constructor(props) {\n        super(props)\n        this.app = this.props.app;\n        this.login = this.props.login;\n        this.tasksFromServer = this.props.tasksFromServer;\n        this.tasksTree = new Map();\n        this.tasks = [];\n\n        for (let task of this.tasksFromServer) {\n            let taskId = task['task_id'];\n            let taskText = task['task_text'];\n            let taskStatus = task['task_status'];\n            let taskParentId = task['parent_id'];\n\n            this.tasksTree.set(taskId, new Task(taskId, taskText, taskParentId, taskStatus));\n        }\n\n        for (let task of this.tasksTree.values()) {\n            if (this.tasksTree.has(task.parentId)) {\n                this.tasksTree.get(task.parentId).subtasks.push(task);\n            } else {\n                this.tasks.push(task);\n            }\n        }\n\n        this.state = {\n            linearTasksList: this.makeLinearList(this.tasks),\n        }\n        this.linearTasksList = this.makeLinearList(this.tasks);\n        this.addTask = this.addTask.bind(this);\n        this.addSubtask = this.addSubtask.bind(this);\n        this.removeTask = this.removeTask.bind(this);\n        this.textInputField = React.createRef();\n    }\n\n    makeLinearList(tasksList) {\n        let linearTasksList = [];\n\n        function recursionWalk(tasksList) {\n            for (let task of tasksList) {\n                linearTasksList.push(task);\n                if (task.subtasks.length > 0) {\n                    recursionWalk(task.subtasks);\n                }\n            }\n        }\n        recursionWalk(tasksList);\n\n        return linearTasksList;\n    }\n\n    /**\n     * POST: json = {'taskText': 'string', 'parentId' = 'number'}\n     * GET:\n     * if OK = true: json = {'ok': 'boolean', 'task_id': 'number'}\n     * if OK = false: json = {'ok': 'boolean', 'error_code': 'number' or null,\n     * 'error_message': 'string' or null}\n     */\n    addTask(e) {\n        e.preventDefault();\n        if (this.textInputField.current.value) {\n            let taskText = this.textInputField.current.value;\n            this.textInputField.current.value = '';\n            let sendData = {'taskText': taskText, 'parentId': null}\n\n            const add = (answer) => {\n                if (answer.status === 200) {\n                    let taskId = answer.data['task_id'];\n                    let newTask = new Task(taskId, taskText);\n\n                    this.tasksTree.set(newTask.id, newTask);\n                    this.tasks.push(newTask);\n\n                    this.setState({\n                        linearTasksList: this.makeLinearList(this.tasks),\n                    })\n                } else if (answer.status === 401) {\n                    this.login.forceLogOut();\n                    showInfoWindow('Authorisation problem!');\n                }\n            }\n            this.app.knockKnock('/save_task', add, sendData);\n        }\n    }\n\n    /**\n     * POST: json = {'taskText': 'string', 'parentId' = 'number'}\n     * GET:\n     * if OK = true: json = {'ok': 'boolean', 'task_id': 'number'}\n     * if OK = false: json = {'ok': 'boolean', 'error_code': 'number' or null,\n     * 'error_message': 'string' or null}\n     */\n    addSubtask(subtaskParentId, subtaskText) {\n        let sendData = {'taskText': subtaskText, 'parentId': subtaskParentId}\n\n        const add = (answer) => {\n            if (answer.status === 200) {\n                let taskId = answer.data['task_id'];\n                let newTask = new Task(taskId, subtaskText, subtaskParentId);\n\n                this.tasksTree.set(taskId, newTask);\n                this.tasksTree.get(subtaskParentId).subtasks.push(newTask);\n\n                this.setState({\n                    linearTasksList : this.makeLinearList(this.tasks),\n                })\n            } else if (answer.status === 401) {\n                this.login.forceLogOut();\n                showInfoWindow('Authorisation problem!');\n            }\n        }\n        this.app.knockKnock('/save_task', add, sendData);\n    }\n\n    /**\n     * POST: {taskId: 'number'}\n     * GET:\n     * if OK = true: json = {'ok': true}\n     * if OK = false: json = {'ok': 'boolean', 'error_code': 'number' or null,\n     * 'error_message': 'string' or null}\n     * @param task\n     */\n    removeTask(task) {\n        let sendData = {'taskId': task.id}\n        const remove = (answer) => {\n            if (answer.status === 200) {\n                if (this.tasksTree.has(task.parentId)) {\n                    let childrenList = this.tasksTree.get(task.parentId).subtasks;\n                    childrenList.splice(childrenList.indexOf(task), 1);\n                } else {\n                    this.tasks.splice(this.tasks.indexOf(task), 1);\n                }\n                this.setState({\n                    linearTasksList: this.makeLinearList(this.tasks),\n                })\n            } else if (answer.status === 401) {\n                this.login.forceLogOut();\n                showInfoWindow('Authorisation problem!');\n            }\n        }\n        this.app.knockKnock('/delete_task', remove, sendData);\n    }\n\n    render() {\n        return (\n            <div className={'main_window'}>\n                <div className=\"task_input\">\n                    <form onSubmit={this.addTask}>\n                        <label htmlFor={'task_input_field'}/>\n                            <input type={'text'}\n                                   className={'task_input_field'}\n                                   onSubmit={this.addTask}\n                                   ref={this.textInputField}/>\n                            <button type={'button'}\n                                    className={'task_input_button'}\n                                    onClick={this.addTask}>\n                        <img src=\"/static/icons/add_sub.svg\" alt=\"+\"/>\n                    </button>\n                    </form>\n                </div>\n                <div className=\"main_tasks\"\n                     id={'main_tasks'}>\n                    {this.state.linearTasksList.map((task) => <TaskReact key={task.id.toString()}\n                                                                         app={this.app}\n                                                                         login={this.login}\n                                                                         taskInst={task}\n                                                                         taskId={task.id}\n                                                                         status={task.status}\n                                                                         taskText={task.text}\n                                                                         parentId={task.parentId}\n                                                                         removeTaskFunc={this.removeTask}\n                                                                         addSubtaskFunc={this.addSubtask}/>)}\n                </div>\n            </div>\n        )\n    }\n}\n\nclass TaskReact extends React.Component {\n    constructor(props) {\n        super(props);\n        this.app = this.props.app;\n        this.login = this.props.login;\n        this.taskInst = this.props.taskInst;\n        this.taskId = this.props.taskId;\n        this.state = {\n            status: this.props.status,\n            taskTextValue: this.props.taskText,\n            taskTextShowed: true,\n            subtaskDivShowed: false,\n            addSubtaskDivShowed: false,\n            removeTaskButtonShowed: true,\n            removeTaskButtonDisabled: false,\n            addSubtaskButtonShowed: false,\n            addSubtaskButtonDisabled: true,\n            editTaskDivShowed: false,\n            saveEditButtonDisabled: true,\n        }\n        this.finishTask = this.finishTask.bind(this);\n        this.removeTask = this.removeTask.bind(this);\n        this.showEditTaskField = this.showEditTaskField.bind(this);\n        this.saveEdit = this.saveEdit.bind(this);\n        this.showSubtaskField = this.showSubtaskField.bind(this);\n        this.addSubtask = this.addSubtask.bind(this);\n        this.addSubtaskByEnterKey = this.addSubtaskByEnterKey.bind(this);\n        this.addSubtaskField = React.createRef();\n        this.editTaskField = React.createRef();\n    }\n\n    /**\n     * POST: json = {'task_id': 'number', 'status': 'boolean'}\n     * GET:\n     * if OK = true: json = {'ok': true}\n     * if OK = false: json = {'ok': 'boolean', 'error_code': 'number' or null,\n     * 'error_message': 'string' or null}\n     */\n    finishTask() {\n        let taskStatus = this.state.status === false;\n        let sendData = {\n            'taskId': this.taskId,\n            'status': taskStatus\n        };\n        const finish = (answer) => {\n            if (answer.status === 200) {\n                this.setState({\n                    status: taskStatus\n                });\n            } else if (answer.status === 401) {\n                this.login.forceLogOut();\n                showInfoWindow('Authorisation problem!');\n            }\n        }\n        this.app.knockKnock('/finish_task', finish, sendData);\n    }\n\n    removeTask() {\n        this.props.removeTaskFunc(this.taskInst);\n    }\n\n    showSubtaskField() {\n        if (this.state.addSubtaskDivShowed === false) {\n            this.app.showShadowModal();\n            this.setState({\n                taskTextShowed: false,\n                addSubtaskDivShowed: true,\n                addSubtaskButtonDisabled: false,\n                removeTaskButtonShowed: false,\n                removeTaskButtonDisabled: true,\n            });\n        } else {\n            this.app.hideShadowModal();\n            this.setState({\n                taskTextShowed: true,\n                addSubtaskDivShowed: false,\n                addSubtaskButtonDisabled: true,\n                removeTaskButtonShowed: true,\n                removeTaskButtonDisabled: false,\n            });\n        }\n    }\n\n    addSubtask() {\n        if (this.addSubtaskField.current.value) {\n            let subtaskText = this.addSubtaskField.current.value;\n            this.addSubtaskField.current.value = '';\n\n            this.showSubtaskField();\n\n            this.props.addSubtaskFunc(this.taskId, subtaskText);\n\n        }\n    }\n\n    addSubtaskByEnterKey(e) {\n        if (e.keyCode === 13) {\n            this.addSubtask();\n        }\n    }\n\n    showEditTaskField() {\n        if (this.state.editTaskDivShowed === false) {\n            this.app.showShadowModal();\n            this.setState({\n                taskTextShowed: false,\n                editTaskDivShowed: true,\n                saveEditButtonDisabled: false,\n                removeTaskButtonShowed: false,\n                removeTaskButtonDisabled: true,\n            });\n            this.editTaskField.current.value = this.state.taskTextValue;\n        } else {\n            if (this.editTaskField.current.value !== this.state.taskTextValue) {\n                let sendData = {\n                    'taskId': this.props.taskId,\n                    'taskText': this.editTaskField.current.value\n                };\n\n                const saveEdit = (answer) => {\n                    if (answer.status === 200) {\n                        this.setState({\n                            taskTextValue: this.editTaskField.current.value,\n                        })\n                    } else if (answer.status === 401) {\n                        this.login.forceLogOut();\n                        showInfoWindow('Authorisation problem!');\n                    }\n                }\n                this.app.knockKnock('/save_edit_task', saveEdit, sendData);\n            }\n            this.app.hideShadowModal();\n            this.setState({\n                taskTextShowed: true,\n                editTaskDivShowed: false,\n                saveEditButtonDisabled: true,\n                removeTaskButtonShowed: true,\n                removeTaskButtonDisabled: false,\n            });\n        }\n    }\n\n    saveEdit(e) {\n        if (e.keyCode === 13) {\n            this.showEditTaskField();\n        }\n    }\n\n    render() {\n        let addSubtaskDivStyle;\n        let showSubtaskDivButtonStyle;\n        let addSubtaskTextFieldStyle;\n        let addSubtaskButtonStyle;\n        let taskTextStyle;\n        let removeTaskButtonStyle;\n        let editTaskDivStyle;\n        let editTaskTextFieldStyle;\n        let saveEditButtonStyle;\n\n        if (this.state.addSubtaskDivShowed) {\n            addSubtaskDivStyle = 'subtask_div';\n            showSubtaskDivButtonStyle = 'show_subtask_div_button';\n            addSubtaskTextFieldStyle = 'add_subtask_text_field';\n            addSubtaskButtonStyle = 'add_subtask_button';\n        } else {\n            addSubtaskDivStyle = 'subtask_div subtask_div_hidden';\n            showSubtaskDivButtonStyle = 'show_subtask_div_button show_subtask_div_button_hidden'\n            addSubtaskTextFieldStyle = 'add_subtask_text_field add_subtask_text_field_hidden';\n            addSubtaskButtonStyle = 'add_subtask_button add_subtask_button_hidden';\n        }\n\n        if (this.state.editTaskDivShowed) {\n            editTaskDivStyle = 'edit_task_div';\n            editTaskTextFieldStyle = 'edit_task_text_field';\n            saveEditButtonStyle = 'save_edit_button';\n        } else {\n            editTaskDivStyle = 'edit_task_div edit_task_div_hidden';\n            editTaskTextFieldStyle = 'edit_task_text_field edit_task_text_field_hidden';\n            saveEditButtonStyle = 'save_edit_button save_edit_button_hidden';\n        }\n\n        if (this.state.taskTextShowed) {\n            taskTextStyle = 'task_text';\n        } else {\n            taskTextStyle = 'task_text task_text_hidden';\n        }\n\n        if (this.state.removeTaskButtonShowed) {\n            removeTaskButtonStyle = 'remove_task_button';\n        } else  {\n            removeTaskButtonStyle = 'remove_task_button remove_task_button_hidden';\n        }\n\n        return (\n            <div className={this.state.status === false ? 'task_div_content' : 'task_div_content finished_task'}>\n                <button className={'task_finish_button'}\n                        type={'button'}\n                        onClick={this.finishTask}>\n                    <img src=\"/static/icons/check.svg\" alt=\"V\"/>\n                </button>\n                <button className={showSubtaskDivButtonStyle} onClick={this.showSubtaskField}>+</button>\n                <p className={taskTextStyle}\n                   onClick={this.showEditTaskField}>{this.state.taskTextValue}</p>\n                <button className={removeTaskButtonStyle}\n                        type={'button'}\n                        onClick={this.removeTask}\n                        disabled={this.state.removeTaskButtonDisabled}>\n                    <img src=\"/static/icons/delete.svg\" alt=\"\"/>\n                </button>\n                <div className={addSubtaskDivStyle}>\n                    <input className={addSubtaskTextFieldStyle}\n                           type=\"text\"\n                           onKeyDown={this.addSubtaskByEnterKey}\n                           ref={this.addSubtaskField}/>\n                    <button className={addSubtaskButtonStyle}\n                            type={'button'}\n                            disabled={this.state.addSubtaskButtonDisabled}\n                            onClick={this.addSubtask}>\n                        <img src=\"/static/icons/add_sub.svg\" alt=\"+\"/>\n                    </button>\n                </div>\n                <div className={editTaskDivStyle}>\n                    <input className={editTaskTextFieldStyle}\n                           type={'text'}\n                           ref={this.editTaskField}\n                           onKeyDown={this.saveEdit}\n                    />\n                    <button className={saveEditButtonStyle}\n                            type={'button'}\n                            onClick={this.showEditTaskField}\n                            disabled={this.state.saveEditButtonDisabled}>\n                        <img src='/static/icons/edit.svg' alt='+'/>\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass LoadingWindowReact extends React.Component {\n    constructor() {\n        super();\n        this.isAlive = false;\n        this.reqCount = 0;\n        this.timerShow = null;\n        this.timerHide = null;\n        this.startTime = null;\n        this.stopTime = null;\n        this.state = {\n            visibility: 'hidden',\n        }\n        this.showWindow = this.showWindow.bind(this);\n        this.hideWindow = this.hideWindow.bind(this);\n    }\n\n    showWindow() {\n        this.reqCount++;\n        if (this.reqCount === 1) {\n            this.timerHide = clearTimeout(this.timerHide);\n            this.timerShow = setTimeout(() => {\n                this.setState({\n                    visibility: 'visible',\n                })\n                this.startTime = Date.now();\n                this.isAlive = true;\n            }, 200);\n        }\n    }\n\n    hideWindow() {\n        if (this.reqCount > 0) {\n            this.reqCount--;\n            this.stopTime = Date.now();\n        }\n        if (this.reqCount === 0) {\n            this.timerShow = clearTimeout(this.timerShow);\n            if (this.isAlive) {\n                if (this.stopTime - this.startTime >= 200) {\n                    this.setState({\n                        visibility: 'hidden',\n                    })\n                    this.isAlive = false;\n                } else {\n                    this.timerHide = setTimeout(() => {\n                        this.setState({\n                            visibility: 'hidden',\n                        })\n                        this.isAlive = false;\n                    }, 200 - (this.stopTime - this.startTime));\n                }\n            }\n        }\n    }\n    render() {\n        return(\n            <div className={'loading_window'}\n                 id={'loading_window'} style={\n                     {\n                         visibility: this.state.visibility,\n                     }}>\n                <p className={'loading_window_message'}\n                   id={'loading_window_message'}>\n                    ГРУЖУСЬ\n                </p>\n            </div>\n        )\n    }\n}"]}