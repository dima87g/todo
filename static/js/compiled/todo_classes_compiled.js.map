{"version":3,"sources":["../todo_classes.js"],"names":[],"mappings":"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,CAAjB,EAAsB;AAClB,QAAA,WAAW,CAAC,WAAZ,CAAwB,WAAW,CAAC,SAApC;AACH;AACJ;;;;;;IAGC,I;AACF,gBAAY,SAAZ,EAAuB,QAAvB,EAAiC,EAAjC,EAAqC,IAArC,EAA4E;AAAA,QAAjC,QAAiC,uEAAtB,IAAsB;AAAA,QAAhB,MAAgB,uEAAP,KAAO;;AAAA;;AACxE,SAAK,SAAL,GAAiB,SAAjB;AACA,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,QAAL,GAAgB,EAAhB;AACH,G,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;qCAEiB;AACb,UAAM,IAAI,GAAG,IAAb;AACA,UAAI,OAAO,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAd;AACA,MAAA,OAAO,CAAC,YAAR,CAAqB,OAArB,EAA8B,MAA9B,EAHa,CAIb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"todo_classes_compiled.js","sourcesContent":["'use strict';\n\nclass TaskList {\n    constructor() {\n        this.tasks = [];\n        this.tasksTree = new Map();\n        this.loginClass = null;\n    }\n\n    addTask() {\n        /**\n         * POST: json = {'taskText': 'string', 'parentId' = 'number'}\n         * GET:\n         * if OK = true: json = {'ok': 'boolean', 'task_id': 'number'}\n         * if OK = false: json = {'ok': 'boolean', 'error_code': 'number' or null,\n         * 'error_message': 'string' or null}\n         */\n        if (document.getElementById(\"task_input_field\").value) {\n            let taskText = document.getElementById(\"task_input_field\").value;\n            document.getElementById(\"task_input_field\").value = \"\";\n            let sendData = {\"taskText\": taskText, \"parentId\": null};\n\n            const add = (answer) => {\n                if (answer['ok'] === true) {\n                    let taskId = answer['task_id'];\n                    let newTask = new Task(this, taskId, taskText);\n\n                    this.tasksTree.set(newTask.id, newTask);\n                    this.tasks.push(newTask);\n\n                    this.updateDom();\n                }\n                if (answer[\"error_code\"] === 401) {\n                    this.loginClass.logOut();\n                    showInfoWindow(\"Authorisation problem!\");\n                }\n            }\n            knock_knock('save_task', add, sendData);\n        }\n    }\n\n    addSubtask(taskObject, DOMElement) {\n        /**\n         * POST: json = {'taskText': 'string', 'parentId': 'number'}\n         * GET:\n         * if OK = true: json = {'ok': 'boolean', 'task_id': 'number'}\n         * if OK = false: json = {'ok': 'boolean', 'error_code': 'number' or null,\n         * 'error_message': 'string' or null}\n         */\n        let subtaskDiv = DOMElement.parentNode;\n        let taskDiv = subtaskDiv.parentNode;\n        if (subtaskDiv.getElementsByClassName('subtask_text_field')[0].value) {\n            let taskText = subtaskDiv.getElementsByClassName('subtask_text_field')[0].value;\n            subtaskDiv.getElementsByClassName('subtask_text_field')[0].value = '';\n            taskDiv.getElementsByClassName('show_subtask_input_button')[0].click();\n            let parentId = taskObject.id;\n            let sendData = {'taskText': taskText, 'parentId': parentId}\n            const add = (answer) => {\n                if (answer['ok'] === true) {\n                    let taskId = answer['task_id'];\n                    let newTask = new Task(this, taskId, taskText, parentId);\n\n                    this.tasksTree.set(taskId, newTask);\n                    taskObject.subtasks.push(newTask);\n\n                    this.updateDom();\n                } else if (answer['error_code'] === 401) {\n                    this.loginClass.logOut();\n                    showInfoWindow(\"Authorisation problem!\");\n                }\n            }\n            knock_knock('save_task', add, sendData);\n        }\n    }\n\n    removeTask(node) {\n        /**\n         * @param {object} - Task instance object\n         * POST: {taskId: 'number'}\n         * GET:\n         * if OK = true: json = {'ok': true}\n         * if OK = false: json = {'ok': 'boolean', 'error_code': 'number' or null,\n         * 'error_message': 'string' or null}\n         */\n        let sendData = {'taskId': node.id}\n        const remove = (answer) => {\n            if (answer['ok'] === true) {\n                if (this.tasksTree.has(node.parentId)) {\n                    let parentList = this.tasksTree.get(node.parentId).subtasks;\n                    parentList.splice(parentList.indexOf(node), 1);\n                } else {\n                    this.tasks.splice(this.tasks.indexOf(node), 1);\n                }\n                this.tasksTree.delete(node.id);\n                this.updateDom();\n            } else if (answer[\"error_code\"] === 401) {\n                this.loginClass.logOut();\n                showInfoWindow(\"Authorisation problem!\");\n            }\n        }\n        knock_knock('delete_task', remove, sendData);\n    }\n\n    updateDom() {\n        let tasksParent = document.getElementById(\"main_tasks\");\n        let existTasks = document.getElementsByClassName(\"task\");\n        let linearTasksList = [];\n\n        function linearTaskListFiller(tasks) {\n            for (let task of tasks) {\n                linearTasksList.push(task);\n                if (task.subtasks.length > 0) {\n                    linearTaskListFiller(task.subtasks);\n                }\n            }\n        }\n\n        linearTaskListFiller(this.tasks);\n\n        let i = 0;\n\n        for (i; i < linearTasksList.length; i++) {\n            if (existTasks[i]) {\n                linearTasksList[i].replaceTaskNode(existTasks[i]);\n            } else {\n                tasksParent.appendChild(linearTasksList[i].createTaskNode());\n            }\n        }\n        while (existTasks[i]) {\n            tasksParent.removeChild(tasksParent.lastChild);\n        }\n    }\n}\n\nclass Task {\n    constructor(loginInst, taskList, id, text, parentId = null, status = false) {\n        this.loginInst = loginInst;\n        this.taskList = taskList;\n        this.id = id;\n        this.text = text;\n        this.parentId = parentId;\n        this.status = status;\n        this.subtasks = [];\n    }\n\n    // showSubtaskInput() {\n    //     let showed = false;\n    //     let timerShow = null;\n    //     let timerHide = null;\n    //     let timerEnableButton = null;\n    //     return function() {\n    //         let taskText = this.parentNode.getElementsByClassName('task_text')[0];\n    //         let removeButton = this.parentNode.getElementsByClassName('task_remove_button')[0];\n    //         let subtaskDiv = this.parentNode.getElementsByClassName('subtask_div')[0];\n    //         let subtaskTextField = this.parentNode.getElementsByClassName('subtask_text_field')[0];\n    //         let addSubtaskButton = this.parentNode.getElementsByClassName('add_subtask_button')[0];\n    //         let addSubtaskButtonIcon = addSubtaskButton.firstChild;\n    //         if (showed === false) {\n    //             showed = true;\n    //             removeButton.disabled = true;\n    //             timerHide = clearTimeout(timerHide);\n    //             removeButton.style.transitionDelay = '0s';\n    //             removeButton.style.opacity = '0';\n    //             removeButton.style.transform = 'scale(0)'\n    //             taskText.style.opacity = '0';\n    //             subtaskDiv.style.visibility = 'visible';\n    //             subtaskTextField.style.visibility = 'visible';\n    //             addSubtaskButton.style.visibility = 'visible';\n    //             addSubtaskButtonIcon.style.visibility = 'visible';\n    //\n    //             timerShow = setTimeout(function() {\n    //                 subtaskTextField.style.opacity = '1';\n    //                 subtaskTextField.style.width = '65%';\n    //                 addSubtaskButton.style.transitionDelay = '0.2s';\n    //                 addSubtaskButton.style.opacity = '1';\n    //                 addSubtaskButton.style.transform = 'scale(1)';\n    //             }, );\n    //\n    //             timerEnableButton = setTimeout(function() {\n    //                 addSubtaskButton.disabled = false;\n    //                 taskText.style.visibility = 'hidden';\n    //             }, 700);\n    //         } else {\n    //             showed = false;\n    //             addSubtaskButton.disabled = true;\n    //             timerShow = clearTimeout(timerShow);\n    //             timerEnableButton = clearTimeout(timerEnableButton);\n    //             removeButton.style.transitionDelay = '0.2s';\n    //             removeButton.style.opacity = '1';\n    //             removeButton.style.transform = 'scale(1)';\n    //             taskText.style.visibility = 'visible';\n    //             taskText.style.opacity = '1';\n    //             subtaskTextField.value = '';\n    //             subtaskTextField.style.opacity = '0';\n    //             subtaskTextField.style.width = '0';\n    //             addSubtaskButton.style.transitionDelay = '0s';\n    //             addSubtaskButton.style.opacity = '0';\n    //             addSubtaskButton.style.transform = 'scale(0)';\n    //\n    //             timerHide = setTimeout(function() {\n    //                 removeButton.disabled = false;\n    //                 subtaskTextField.style.visibility = 'hidden';\n    //                 addSubtaskButton.style.visibility = 'hidden';\n    //                 addSubtaskButtonIcon.style.visibility = 'hidden';\n    //                 subtaskDiv.style.visibility = 'hidden';\n    //             }, 700);\n    //         }\n    //     }\n    // }\n\n    createTaskNode() {\n        const self = this;\n        let taskDiv = document.createElement(\"div\");\n        taskDiv.setAttribute(\"class\", \"task\");\n        //\n        // let taskDivContent = document.createElement('div');\n        // taskDivContent.setAttribute('class', 'task_div_content');\n        //\n        // let finishButton = document.createElement('button');\n        // finishButton.setAttribute('type', 'submit');\n        // finishButton.setAttribute('class', 'task_finish_button');\n        //\n        // let finishButtonIcon = document.createElement('img');\n        // finishButtonIcon.setAttribute('src', '../static/icons/check.svg');\n        // finishButton.appendChild(finishButtonIcon);\n        //\n        // if (this.status === true) {\n        //     taskDiv.setAttribute(\"class\", \"task finished_task\");\n        // }\n        //\n        // finishButton.onclick = function () {\n        //     self.taskList.finishTask(self);\n        // };\n        //\n        // let showSubtaskDivButton = document.createElement('input');\n        // showSubtaskDivButton.setAttribute('type', 'button');\n        // showSubtaskDivButton.setAttribute('class', 'show_subtask_input_button');\n        // showSubtaskDivButton.setAttribute('value', '+');\n        //\n        // showSubtaskDivButton.onclick = this.showSubtaskInput();\n        //\n        // let subtaskDiv = document.createElement('div');\n        // subtaskDiv.setAttribute('class', 'subtask_div');\n        //\n        // let subtaskTextField = document.createElement('input');\n        // subtaskTextField.setAttribute('type', 'text');\n        // subtaskTextField.setAttribute('class', 'subtask_text_field');\n        //\n        // let addSubtaskButton = document.createElement('button');\n        //\n        // addSubtaskButton.setAttribute('type', 'submit');\n        // addSubtaskButton.setAttribute('class', 'add_subtask_button');\n        //\n        // let addSubtaskButtonIcon = document.createElement('img');\n        //\n        // addSubtaskButtonIcon.setAttribute('src', 'static/icons/add_sub.svg');\n        // addSubtaskButton.appendChild(addSubtaskButtonIcon);\n        //\n        // function noEnterRefreshAddSubtaskButton(event) {\n        //     if (event.keyCode === 13) {\n        //         event.preventDefault();\n        //         addSubtaskButton.click();\n        //     }\n        // }\n        //\n        // subtaskTextField.addEventListener('keydown', noEnterRefreshAddSubtaskButton, false);\n        //\n        // addSubtaskButton.onclick = function () {\n        //     self.taskList.addSubtask(self, this);\n        // }\n        //\n        // subtaskDiv.appendChild(subtaskTextField);\n        // subtaskDiv.appendChild(addSubtaskButton);\n        //\n        // let par = document.createElement(\"p\");\n        //\n        // par.appendChild(document.createTextNode(this.text));\n        // par.setAttribute(\"class\", \"task_text\");\n        //\n        // let removeButton = document.createElement('button');\n        //\n        // removeButton.setAttribute('type', 'submit');\n        // removeButton.setAttribute('class', 'task_remove_button');\n        //\n        // let removeButtonIcon = document.createElement('img');\n        //\n        // removeButtonIcon.setAttribute('src','static/icons/delete.svg');\n        //\n        // removeButton.appendChild(removeButtonIcon);\n        //\n        // removeButton.onclick = function () {\n        //     self.taskList.removeTask(self);\n        // };\n        //\n        // taskDiv.appendChild(finishButton);\n        // taskDiv.appendChild(showSubtaskDivButton);\n        // taskDiv.appendChild(subtaskDiv);\n        // taskDiv.appendChild(par);\n        // taskDiv.appendChild(removeButton);\n\n        ReactDOM.render(<TaskReact loginInst={this.loginInst} taskList={this.taskList} taskId={this.id} taskText={this.text}/>, taskDiv);\n        let removeTaskButton = taskDiv.getElementsByClassName('remove_task_button')[0];\n\n        removeTaskButton.onclick = function () {\n            self.taskList.removeTask(self);\n        };\n        return taskDiv;\n    }\n\n    replaceTaskNode(existTask) {\n        const self = this;\n        let finishButton = existTask.getElementsByClassName(\"task_finish_button\")[0];\n        let addSubtaskButton = existTask.getElementsByClassName('add_subtask_button')[0];\n        let removeButton = existTask.getElementsByClassName(\"remove_task_button\")[0];\n        existTask.getElementsByTagName(\"p\")[0].textContent = this.text;\n        if (this.status === false) {\n            existTask.setAttribute(\"class\", \"task\");\n        } else {\n            existTask.setAttribute(\"class\", \"task finished_task\");\n        }\n        finishButton.onclick = function () {\n            self.taskList.finishTask(self);\n        };\n        addSubtaskButton.onclick = function () {\n            self.taskList.addSubtask(self, this);\n        };\n        removeButton.onclick = function () {\n            self.taskList.removeTask(self);\n        };\n    }\n}\n\nclass Login {\n    constructor() {\n        const self = this;\n        this.taskList = undefined;\n        this.authMenu = document.getElementById(\"auth_menu\");\n        this.loginWindow = document.getElementById(\"login_window\");\n        this.loginWindowInfo = document.getElementById(\"login_window_info\");\n        this.loginFormUsername = document.getElementById(\"login_form_username\");\n        this.loginFormPassword = document.getElementById(\"login_form_password\");\n        this.loginButton = document.getElementById(\"login_form_button\");\n        this.registerWindow = document.getElementById(\"register_window\");\n        this.registerWindowInfo = document.getElementById(\"register_window_info\");\n        this.registerFormUsername = document.getElementById(\"register_form_username\");\n        this.registerFormPassword = document.getElementById(\"register_form_password\");\n        this.registerFormPasswordConfirm = document.getElementById(\"register_form_password_confirm\");\n        this.userRegisterButton = document.getElementById(\"register_form_button\");\n        this.switchRegisterButton = document.getElementById(\"register_button\");\n        this.switchLoginButton = document.getElementById(\"login_button\");\n        this.userNameField = document.getElementById(\"user_name_field\");\n        this.userLogOutButton = document.getElementById('user_logout_button');\n        this.userDeleteButton = document.getElementById(\"user_delete_button\");\n\n        this.loginFormUsername.focus();\n        this.userLogOutButton.disabled = true;\n        this.userDeleteButton.disabled = true;\n\n        this.switchRegisterButton.onclick = function () {\n            self.switchLogin(this.value);\n        }\n        this.switchLoginButton.onclick = function () {\n            self.switchLogin(this.value);\n        }\n        this.loginButton.onclick = function () {\n            self.logIn();\n        }\n        this.userLogOutButton.onclick = function () {\n            self.logOut();\n        }\n        this.userDeleteButton.onclick = function () {\n            self.userDelete();\n        }\n        this.userRegisterButton.onclick = function () {\n            self.userRegister();\n        }\n    }\n\n\n    switchLogin(val) {\n        if (val === 'register') {\n            windowChange(this.registerWindow, this.switchLoginButton, this.loginWindow, this.switchRegisterButton, this.loginWindowInfo);\n        } else if (val === 'login') {\n            windowChange(this.loginWindow, this.switchRegisterButton, this.registerWindow, this.switchLoginButton, this.registerWindowInfo);\n        }\n\n        function windowChange(activate, activateButton, deactivate, deactivateButton, infoField) {\n            removeChildren(infoField);\n            deactivate.style.opacity = '0';\n            deactivateButton.disabled = true;\n            activate.style.visibility = 'inherit';\n            setTimeout(function () {\n                activate.style.opacity = '1';\n            });\n            setTimeout(function () {\n                deactivate.style.visibility = 'hidden';\n                activateButton.disabled = false;\n            }, 500);\n        }\n    }\n\n\n    hideLoginWindow() {\n        this.loginFormUsername.value = \"\";\n        this.registerFormUsername.value = '';\n        this.registerFormPassword.value = '';\n        this.registerFormPasswordConfirm.value = '';\n        removeChildren(this.loginWindowInfo);\n        this.authMenu.style.opacity = '0';\n        hideShadow();\n\n        setTimeout(() => {\n            this.authMenu.style.visibility = 'hidden';\n            // document.getElementById('task_input_field').focus();\n        }, 500);\n    }\n\n\n    showLoginWindow() {\n        showShadow();\n        removeChildren(this.userNameField);\n        this.userLogOutButton.disabled = true;\n        this.userDeleteButton.disabled = true;\n        this.authMenu.style.visibility = 'visible';\n        this.loginFormUsername.focus();\n        setTimeout(() => {\n            this.authMenu.style.opacity = '1';\n        });\n    }\n\n\n    onLoad() {\n        /**\n         * POST:\n         * GET:\n         * if OK = true: json = {'ok': 'boolean', 'user_id': 'number', 'tasks': [\n         *                                          {\"task_id\": \"number\", 'task_text': 'string', 'status': 'string'},\n         *                                          ...\n         *                                          ]\n         *             }\n         * if OK = false: json = {'ok': 'boolean', 'error_code': 'number' or null,\n         * 'error_message': 'string' or null}\n         */\n        const loadTasks = (answer) => {\n            if (answer['ok'] === true) {\n                let userName = answer[\"user_name\"];\n                let tasksFromServer = answer['tasks'];\n\n                if (!this.userNameField.firstChild) {\n                    this.userNameField.appendChild(document.createTextNode(userName));\n                    this.userLogOutButton.disabled = false;\n                    this.userDeleteButton.disabled = false;\n                }\n\n                this.taskList = new TaskList();\n                this.taskList.loginClass = this;\n                let taskInputButton = document.getElementById(\"task_input_button\");\n\n                taskInputButton.onclick = () => {\n                    this.taskList.addTask();\n                    return false;\n                }\n\n                let tasksTree = this.taskList.tasksTree;\n\n                for (let task of tasksFromServer) {\n                    let taskId = task[\"task_id\"];\n                    let taskText = task[\"task_text\"];\n                    let taskStatus = task[\"task_status\"];\n                    let parentId = task[\"parent_id\"];\n\n                    tasksTree.set(taskId, new Task(this, this.taskList, taskId, taskText, parentId, taskStatus));\n                }\n\n                for (let task of tasksTree.values()) {\n                    if (tasksTree.has(task.parentId)) {\n                        tasksTree.get(task.parentId).subtasks.push(task);\n                    } else {\n                        this.taskList.tasks.push(task);\n                    }\n                }\n\n                this.taskList.updateDom();\n\n            }\n            if (answer[\"error_code\"] === 401) {\n                this.logOut();\n                showInfoWindow(\"Authorisation problem!\");\n            }\n        }\n        knock_knock('load_tasks', loadTasks);\n    }\n\n    logIn() {\n        /**\n         * POST: json = {\"userName\": \"string\", \"password\": \"string\"}\n         * GET:\n         * if OK = true: json = {\"ok\": \"boolean\", \"user_id\": \"number\",\n         *                         \"tasks\": [{\"task_id\": \"number\", \"task_text\": \"string\", \"status\": \"boolean\"},\n         *                                  ..........] }\n         * if OK = false: json = {'ok': 'boolean', 'error_code': 'number' or null,\n         *                        'error_message': 'string' or null}\n         */\n\n        removeChildren(this.loginWindowInfo);\n\n        if (this.loginFormUsername.value && this.loginFormPassword.value) {\n            let userName = this.loginFormUsername.value;\n            let password = this.loginFormPassword.value;\n            const sendData = {\"userName\": userName, \"password\": password};\n\n            this.loginFormPassword.value = \"\";\n\n            const login = (answer) => {\n                if (answer[\"ok\"] === true) {\n                    let userName = answer[\"user_name\"];\n\n                    this.userNameField.appendChild(document.createTextNode(userName));\n                    this.userLogOutButton.disabled = false;\n                    this.userDeleteButton.disabled = false;\n\n                    this.hideLoginWindow();\n\n                    this.onLoad()\n                } else {\n                    this.loginWindowInfo.appendChild(document.createTextNode(answer[\"error_message\"]));\n                }\n            }\n            knock_knock('user_login', login, sendData);\n        } else if (!this.loginFormUsername.value) {\n            this.loginWindowInfo.appendChild(document.createTextNode('Please, enter user name!'));\n        } else if (!this.loginFormPassword.value) {\n            this.loginWindowInfo.appendChild(document.createTextNode('Please, enter password!'))\n        }\n    }\n\n    logOut() {\n        const out = () => {\n            this.taskList = null;\n            document.cookie = \"id=; expires=-1\";\n            document.cookie = \"sign=; expires=-1\";\n\n            let tasksParent = document.getElementById(\"main_tasks\");\n            removeChildren(tasksParent);\n\n            this.showLoginWindow();\n        }\n\n        showConfirmWindow(out, 'Are you sure, you want to log out?');\n\n    }\n\n    errorLogOut() {\n        this.taskList = null;\n        document.cookie = 'id=; expires=-1';\n        document.cookie = 'sign=; expires=-1';\n\n        let taskParent = document.getElementById('main_tasks');\n        removeChildren(taskParent);\n\n        this.showLoginWindow();\n    }\n\n    userDelete() {\n        const confirm = function () {\n            knock_knock(\"user_delete\", del);\n        }\n\n        const del = (answer) => {\n            if (answer[\"ok\"] === true) {\n                this.logOut();\n            }\n            if (answer[\"error_code\"] === 401) {\n                this.logOut();\n                showInfoWindow(\"Authorisation problem!\");\n            }\n        }\n\n        showConfirmWindow(confirm, \"Are you sure, you want to delete user?\");\n    }\n\n    userRegister() {\n        /**\n         * POST: json =  {\"newUserName\": \"string\",  \"password\": \"string\"}\n         * GET: answer = json = {'ok': 'boolean', 'error_code': 'number' or null,\n     'error_message': 'string' or null}\n         */\n        removeChildren(this.registerWindowInfo);\n\n        if (this.registerFormUsername.value && this.registerFormPassword.value && this.registerFormPasswordConfirm.value) {\n            if (this.registerFormPassword.value === this.registerFormPasswordConfirm.value) {\n                let newUserName = this.registerFormUsername.value;\n                let password = this.registerFormPassword.value;\n\n                const sendData = {\"newUserName\": newUserName, \"password\": password};\n\n                const register = (answer) => {\n                    if (answer['ok'] === true) {\n                        this.registerFormUsername.value = \"\";\n                        this.registerFormPassword.value = \"\";\n                        this.registerFormPasswordConfirm.value = \"\";\n                        this.registerWindowInfo.appendChild(document.createTextNode(\"New user \" + newUserName + \" successfully created!\"));\n                    } else if (answer['error_code'] === 1062) {\n                        this.registerWindowInfo.appendChild(document.createTextNode(\"Name \" + newUserName + \" is already used!\"));\n                    } else {\n                        this.registerWindowInfo.appendChild(document.createTextNode(answer['error_message'] + ' Код ошибки: ' + answer['error_code']));\n                    }\n                }\n                knock_knock('user_register', register, sendData);\n            } else {\n                this.registerWindowInfo.appendChild(document.createTextNode('Passwords are not match!'));\n            }\n        } else if (!this.registerFormUsername.value) {\n            this.registerWindowInfo.appendChild(document.createTextNode('Please, enter new user name!'));\n        } else if (!this.registerFormPassword.value) {\n            this.registerWindowInfo.appendChild(document.createTextNode('Please, enter Password!'));\n        } else if (!this.registerFormPasswordConfirm.value) {\n            this.registerWindowInfo.appendChild(document.createTextNode('Please, confirm Password!'));\n        }\n    }\n}\n\nclass TaskReact extends React.Component {\n    constructor(props) {\n        super(props);\n        this.loginInst = this.props.loginInst;\n        this.taskList = this.props.taskList;\n        this.shadow = shadow();\n        this.state = {\n            status: false,\n            showSubtaskDivButtonZIndex: '0',\n            showSubtaskDivButtonDisabled: false,\n            taskTextValue: this.props.taskText,\n            taskTextOpacity: '1',\n            removeTaskButtonDisabled: false,\n            removeTaskButtonScale: 'scale(1)',\n            removeTaskButtonTransitionDelay: '0',\n            subtaskDivShowed: false,\n            subtaskDivVisibility: 'hidden',\n            subtaskTimerShow: null,\n            subtaskTimerHide: null,\n            subtaskTextFieldOpacity: '0',\n            subtaskTextFieldWidth: '0',\n            addSubtaskButtonOpacity: '0',\n            addSubtaskButtonScale: 'scale(0)',\n            addSubtaskButtonTransitionDelay: '0.2s',\n            taskTextEditDivShowed: false,\n            taskTextEditDivVisibility: 'hidden',\n            taskTextEditFieldWidth: '0',\n            taskTextEditFieldOpacity: '0',\n            taskTextEditFieldScale: 'scale(0)',\n            saveEditButtonScale: 'scale(0)',\n            saveEditButtonTransitionDelay: '0',\n        }\n        this.finishTask = this.finishTask.bind(this);\n        this.showEditTaskField = this.showEditTaskField.bind(this);\n        this.saveEdit = this.saveEdit.bind(this);\n        this.showSubtaskField = this.showSubtaskField.bind(this);\n        this.editTextField = React.createRef();\n    }\n\n    /**\n     * POST: json = {'task_id': 'number', 'status': 'boolean'}\n     * GET:\n     * if OK = true: json = {'ok': true}\n     * if OK = false: json = {'ok': 'boolean', 'error_code': 'number' or null,\n     * 'error_message': 'string' or null}\n     */\n    finishTask() {\n        let taskStatus = this.state.status === false;\n        let sendData = {\n            'taskId': this.props.taskId,\n            'status': taskStatus\n        };\n        const finish = (answer) => {\n            if (answer['ok'] === true) {\n                this.setState({\n                    status: taskStatus\n                });\n            } else if (answer['error_code'] === 401) {\n                this.loginInst.errorLogOut();\n                showInfoWindow('Authorisation problem!');\n            }\n        }\n        knock_knock('finish_task', finish, sendData);\n    }\n\n    showSubtaskField() {\n        if (this.state.subtaskDivShowed === false) {\n            this.shadow();\n            this.subtaskDivHideTimer = clearTimeout(this.subtaskDivHideTimer);\n            this.setState({\n                subtaskDivShowed: true,\n                showSubtaskDivButtonZIndex: '1',\n                removeTaskButtonDisabled: true,\n                removeTaskButtonScale: 'scale(0)',\n                removeTaskButtonTransitionDelay: '0s',\n                taskTextOpacity: '0.2',\n                subtaskDivVisibility: 'visible',\n                subtaskTextFieldOpacity: '1',\n                subtaskTextFieldWidth: '65%',\n                addSubtaskButtonOpacity: '1',\n                addSubtaskButtonScale: 'scale(1)',\n                addSubtaskButtonTransitionDelay: '0.2s',\n            })\n        } else {\n            this.shadow();\n            this.setState({\n                subtaskDivShowed: false,\n\n                removeTaskButtonDisabled: false,\n                removeTaskButtonScale: 'scale(1)',\n                removeTaskButtonTransitionDelay: '0.2s',\n                taskTextOpacity: '1',\n                subtaskTextFieldOpacity: '0',\n                subtaskTextFieldWidth: '0',\n                addSubtaskButtonOpacity: '0',\n                addSubtaskButtonScale: 'scale(0)',\n                addSubtaskButtonTransitionDelay: '0s',\n            })\n            this.subtaskDivHideTimer = setTimeout(() => {\n                this.setState({\n                    subtaskDivVisibility: 'hidden',\n                    showSubtaskDivButtonZIndex: '0',\n                });\n            }, 700);\n        }\n    }\n\n    showEditTaskField(e) {\n        if (this.state.taskTextEditDivShowed === false) {\n            this.shadow();\n            this.hideEditDivTimer = clearTimeout(this.hideEditDivTimer);\n            this.setState({\n                taskTextEditDivShowed: true,\n                showSubtaskDivButtonDisabled: true,\n                taskTextEditDivVisibility: 'visible',\n                taskTextEditFieldOpacity: '1',\n                taskTextEditFieldScale: 'scale(1)',\n                taskTextEditFieldWidth: '65%',\n                removeTaskButtonScale: 'scale(0)',\n                removeTaskButtonTransitionDelay: '0s',\n                saveEditButtonScale: 'scale(1)',\n                saveEditButtonTransitionDelay: '0.2s',\n                taskTextOpacity: '0.2',\n            })\n            this.editTextField.current.value = this.state.taskTextValue;\n            // setTimeout(() => {\n            //     this.editTextField.current.focus();\n            // });\n        } else {\n            this.shadow();\n            this.setState({\n                taskTextEditDivShowed: false,\n                showSubtaskDivButtonDisabled: false,\n                taskTextEditFieldOpacity: '0',\n                taskTextEditFieldScale: 'scale(0)',\n                taskTextEditFieldWidth: '0',\n                removeTaskButtonScale: 'scale(1)',\n                removeTaskButtonTransitionDelay: '0.2s',\n                saveEditButtonScale: 'scale(0)',\n                saveEditButtonTransitionDelay: '0s',\n                taskTextValue: this.editTextField.current.value,\n                taskTextOpacity: '1',\n            })\n            this.hideEditDivTimer = setTimeout(() => {\n                this.setState({\n                    taskTextEditDivVisibility: 'hidden',\n                })\n            }, 500);\n        }\n    }\n\n    saveEdit(e) {\n        if (e.keyCode === 13) {\n            this.showEditTaskField();\n        }\n    }\n\n    render() {\n        return (\n            <div className={this.state.status === false ? 'task_div_content' : 'task_div_content finished_task'}>\n                <button className={'task_finish_button'}\n                        type={'button'}\n                        onClick={this.finishTask}>\n                    <img src=\"/static/icons/check.svg\" alt=\"V\"/>\n                </button>\n                <button className={'show_subtask_input_button'}\n                        style={\n                            {\n                                zIndex: this.state.showSubtaskDivButtonZIndex,\n                            }\n                        }\n                        onClick={this.showSubtaskField}\n                        disabled={this.state.showSubtaskDivButtonDisabled}>+</button>\n                <p className={'task_text'}\n                   style={\n                       {\n                           opacity: this.state.taskTextOpacity,\n                       }\n                   }\n                   onClick={this.showEditTaskField}>{this.state.taskTextValue}</p>\n                <button className={'remove_task_button'}\n                        style={\n                            {\n                                transform: this.state.removeTaskButtonScale,\n                                transitionDelay: this.state.removeTaskButtonTransitionDelay,\n                            }\n                        }\n                        disabled={this.state.removeTaskButtonDisabled} type={'button'}>\n                    <img src=\"/static/icons/delete.svg\" alt=\"\"/>\n                </button>\n                <div className={'subtask_div'} style={{visibility: this.state.subtaskDivVisibility}}>\n                    <input className={'subtask_text_field'}\n                           type=\"text\"\n                           style={\n                               {\n                                   width: this.state.subtaskTextFieldWidth,\n                                   opacity: this.state.subtaskTextFieldOpacity,\n                               }\n                           }/>\n                    <button className={'add_subtask_button'}\n                            type={'button'}\n                            style={\n                                {\n                                    opacity: this.state.addSubtaskButtonOpacity,\n                                    transform: this.state.addSubtaskButtonScale,\n                                    transitionDelay: this.state.addSubtaskButtonTransitionDelay,\n                                }\n                            }>\n                        <img src=\"/static/icons/add_sub.svg\" alt=\"+\"/>\n                    </button>\n                </div>\n                <div className={'task_text_edit_div'}\n                     style={\n                         {\n                             visibility: this.state.taskTextEditDivVisibility,\n                         }\n                     }>\n                    <input className={'task_text_edit_field'}\n                           style={\n                               {\n                                   opacity: this.state.taskTextEditFieldOpacity,\n                                   width: this.state.taskTextEditFieldWidth,\n                                   transform: this.state.taskTextEditFieldScale,\n                               }\n                           }\n                           type={'text'}\n                           ref={this.editTextField}\n                           onKeyDown={this.saveEdit}\n                           // onBlur={this.showEditTaskField}\n                    />\n                    <button className={'save_edit_button'}\n                            style={\n                                {\n                                    transform: this.state.saveEditButtonScale,\n                                    transitionDelay: this.state.saveEditButtonTransitionDelay,\n                                }\n                            }\n                            type={'button'}\n                            onClick={this.showEditTaskField}>\n                        <img src='/static/icons/edit.svg' alt='+'/>\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\n//TODO Maybe compile class LoadingWindow and knock_knock function together????\nclass LoadingWindow {\n    constructor() {\n        this.isAlive = false;\n        this.reqCount = 0;\n        this.timerShow = undefined;\n        this.timerHide = undefined;\n        this.startTime = undefined;\n        this.stopTime = undefined;\n    }\n\n    showWindow(loadingWindow) {\n        this.reqCount++;\n        if (this.reqCount === 1) {\n            this.timerHide = clearTimeout(this.timerHide);\n            this.timerShow = setTimeout(() => {\n                loadingWindow.style.visibility = 'visible';\n                this.startTime = Date.now();\n                this.isAlive = true;\n            }, 200);\n        }\n    }\n\n    hideWindow(loadingWindow) {\n        if (this.reqCount > 0) {\n            this.reqCount--;\n            this.stopTime = Date.now();\n        }\n        if (this.reqCount === 0) {\n            this.timerShow = clearTimeout(this.timerShow);\n            if (this.isAlive) {\n                if (this.stopTime - this.startTime >= 200) {\n                    loadingWindow.style.visibility = 'hidden';\n                    this.isAlive = false;\n                } else {\n                    this.timerHide = setTimeout(() => {\n                        loadingWindow.style.visibility = 'hidden';\n                        this.isAlive = false;\n                    }, 200 - (this.stopTime - this.startTime));\n                }\n            }\n        }\n    }\n}\n\nclass Network {\n    constructor() {\n\n    }\n}\n"]}