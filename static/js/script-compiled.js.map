{"version":3,"sources":["script.js"],"names":[],"mappings":"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","file":"script-compiled.js","sourcesContent":["class TaskList {\r\n    constructor() {\r\n        this.userId = undefined;\r\n        this.tasks = [];\r\n    }\r\n\r\n    addTask() {\r\n        /**\r\n         * POST: json = {'user_id': 'number', taskText = 'string'}\r\n         * GET:\r\n         * if OK = true: json = {'ok': 'boolean', 'task_id': 'number'}\r\n         * if OK = false: json = {'ok': 'boolean', 'error_code': 'number' or null,\r\n         * 'error_message': 'string' or null}\r\n         */\r\n        const self = this;\r\n        if (document.getElementById(\"task_input_field\").value) {\r\n            let taskText = document.getElementById(\"task_input_field\").value;\r\n            document.getElementById(\"task_input_field\").value = \"\";\r\n            let sendData = {'userId': this.userId, 'taskText': taskText};\r\n\r\n            function add(answer) {\r\n                if (answer['ok'] === true) {\r\n                    let taskId = answer['task_id'];\r\n                    let newTask = new Task(self, taskId, taskText);\r\n\r\n                    self.tasks.push(newTask);\r\n\r\n                    self.updateDom();\r\n                }\r\n            }\r\n            knock_knock('save', sendData, add);\r\n        }\r\n    }\r\n\r\n    finishTask(node) {\r\n        /**\r\n         * POST: json = {'task_id': 'number', 'status': 'boolean'}\r\n         * GET:\r\n         * if OK = true: json = {'ok': true}\r\n         * if OK = false: json = {'ok': 'boolean', 'error_code': 'number' or null,\r\n         * 'error_message': 'string' or null}\r\n         */\r\n        const self = this;\r\n        node.status = node.status === false;\r\n        let sendData = {\"taskId\": node.id, \"status\": node.status};\r\n\r\n        function finish(answer) {\r\n            if (answer['ok'] === true) {\r\n                self.updateDom();\r\n            }\r\n        }\r\n        knock_knock('finish_task', sendData, finish);\r\n    }\r\n\r\n    removeTask(node) {\r\n        /**\r\n         * POST: {taskId: 'number'}\r\n         * GET:\r\n         * if OK = true: json = {'ok': true}\r\n         * if OK = false: json = {'ok': 'boolean', 'error_code': 'number' or null,\r\n         * 'error_message': 'string' or null}\r\n         */\r\n        const self = this;\r\n        let sendData = {'taskId': node.id}\r\n\r\n        function remove(answer) {\r\n            if (answer['ok'] === true) {\r\n                self.tasks.splice(self.tasks.indexOf(node), 1);\r\n                self.updateDom();\r\n            }\r\n        }\r\n        knock_knock('delete', sendData, remove);\r\n    }\r\n\r\n    updateDom(tasksParentId = 'main_tasks', existsTasksClass = 'task') {\r\n        let tasksParent = document.getElementById(tasksParentId);\r\n        let existTasks = document.getElementsByClassName(existsTasksClass);\r\n        let i = 0;\r\n\r\n        for (i; i < this.tasks.length; i++) {\r\n            if (existTasks[i]) {\r\n                this.tasks[i].replaceTaskNode(existTasks[i]);\r\n            } else {\r\n                tasksParent.appendChild(this.tasks[i].createTaskNode());\r\n            }\r\n        }\r\n        if (existTasks[i]) {\r\n            // for (i; i < existTasks.length; i++) {\r\n            //     existTasks[i].remove();\r\n            //     i--;\r\n            // }\r\n            tasksParent.removeChild(tasksParent.lastChild);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass Task {\r\n    constructor(taskList, id, text, status = false) {\r\n        this.taskList = taskList;\r\n        this.id = id;\r\n        this.text = text;\r\n        this.status = status;\r\n    }\r\n\r\n    createTaskNode() {\r\n        const node = this;\r\n        let taskDiv = document.createElement(\"div\");\r\n        taskDiv.setAttribute(\"class\", \"task\");\r\n        let finishButton = document.createElement(\"input\");\r\n        finishButton.setAttribute(\"type\", \"button\");\r\n        finishButton.setAttribute(\"class\", \"task_finish_button\");\r\n\r\n        if (this.status === false) {\r\n            finishButton.setAttribute(\"value\", \"Выполнено\");\r\n        } else {\r\n            finishButton.setAttribute(\"value\", \"Не выполнено\");\r\n            taskDiv.setAttribute(\"class\", \"task finished_task\");\r\n        }\r\n        finishButton.onclick = function () {\r\n            node.taskList.finishTask(node);\r\n        };\r\n\r\n        let removeButton = document.createElement(\"input\");\r\n\r\n        removeButton.setAttribute(\"type\", \"button\");\r\n        removeButton.setAttribute(\"value\", \"X\");\r\n        removeButton.setAttribute(\"class\", \"task_remove_button\");\r\n        removeButton.onclick = function () {\r\n            node.taskList.removeTask(node);\r\n        };\r\n\r\n        let par = document.createElement(\"p\");\r\n\r\n        par.appendChild(document.createTextNode(this.text));\r\n        par.setAttribute(\"class\", \"paragraph\");\r\n        taskDiv.appendChild(finishButton);\r\n        taskDiv.appendChild(par);\r\n        taskDiv.appendChild(removeButton);\r\n\r\n        return taskDiv;\r\n    }\r\n\r\n    replaceTaskNode(existTask) {\r\n        const node = this;\r\n        let finishButton = existTask.getElementsByClassName(\"task_finish_button\")[0];\r\n        let removeButton = existTask.getElementsByClassName(\"task_remove_button\")[0];\r\n        existTask.getElementsByTagName(\"p\")[0].textContent = this.text;\r\n        if (this.status === false) {\r\n            finishButton.setAttribute(\"value\", \"Выполнено\");\r\n            existTask.setAttribute(\"class\", \"task\");\r\n        } else {\r\n            finishButton.setAttribute(\"value\", \"Не выполнено\");\r\n            existTask.setAttribute(\"class\", \"task finished_task\");\r\n        }\r\n        finishButton.onclick = function () {\r\n            node.taskList.finishTask(node);\r\n        };\r\n        removeButton.onclick = function () {\r\n            node.taskList.removeTask(node);\r\n        };\r\n    }\r\n}\r\n\r\n\r\nclass Login {\r\n    constructor() {\r\n        const self = this;\r\n        this.switchRegisterButton = document.getElementById(\"register_button\");\r\n        this.switchLoginButton = document.getElementById(\"login_button\");\r\n        this.logInButton = document.getElementById(\"login_field_button\");\r\n        this.logOutButton = document.getElementById('user_logout_button');\r\n        this.userDeleteButton = document.getElementById(\"user_delete_button\");\r\n        this.userRegisterButton = document.getElementById(\"register_form_button\");\r\n\r\n        this.switchRegisterButton.onclick = function() {\r\n            self.switchLogin(this.value);\r\n        }\r\n        this.switchLoginButton.onclick = function() {\r\n            self.switchLogin(this.value);\r\n        }\r\n        this.logInButton.onclick = function() {\r\n            self.logIn();\r\n        }\r\n        this.logOutButton.onclick = function() {\r\n            self.logOut();\r\n        }\r\n        this.userDeleteButton.onclick = function() {\r\n            self.userDelete();\r\n        }\r\n        this.userRegisterButton.onclick = function() {\r\n            self.userRegister();\r\n        }\r\n    }\r\n\r\n\r\n    onLoad(userName) {\r\n    /**\r\n     * POST: userName = 'string'\r\n     * GET:\r\n     * if OK = true: json = {'ok': 'boolean', 'user_id': 'number', 'tasks': [\r\n     *                                          {'user_id': 'number', 'task_text': 'string', 'status': 'string'},\r\n     *                                          ...\r\n     *                                          ]\r\n     *             }\r\n     * if OK = false: json = {'ok': 'boolean', 'error_code': 'number' or null,\r\n     * 'error_message': 'string' or null}\r\n     */\r\n        let sendData = {'userName': userName};\r\n\r\n        function loadTasks(answer) {\r\n            let authMenu = document.getElementById(\"auth_menu\");\r\n            let infoMessage = document.getElementById('login_form_info');\r\n            let shadow = document.getElementById(\"shadow\");\r\n\r\n            if (answer['ok'] === true) {\r\n                infoMessage.textContent = '';\r\n                authMenu.style.opacity = '0';\r\n                shadow.style.display = \"none\";\r\n                \r\n                setTimeout(function() {\r\n                    authMenu.style.display = 'none';\r\n                    document.getElementById('task_input_field').focus();\r\n                    }, 500);\r\n\r\n                let userNameField = document.getElementById('user_name_field');\r\n                let logOutButton = document.getElementById('user_logout_button');\r\n\r\n                userNameField.appendChild(document.createTextNode(userName));\r\n                logOutButton.disabled = false;\r\n\r\n                let userId = answer['user_id'];\r\n                let tasksFromServer = answer['tasks'];\r\n\r\n                createNewTaskList(userId, tasksFromServer, 'task_input_button', 'main_tasks', 'task');\r\n\r\n            } else {\r\n                infoMessage.textContent = 'Проблема(((((';\r\n                }\r\n        }\r\n        knock_knock('load', sendData, loadTasks);\r\n    }\r\n\r\n    switchLogin(val) {\r\n        let loginWindow = document.getElementById('login_form');\r\n        // let registerButton = document.getElementById('register_button');\r\n        let registerWindow = document.getElementById('register_form');\r\n        // let loginButton = document.getElementById('login_button');\r\n\r\n\r\n        if (val === 'register') {\r\n            windowChange(registerWindow, this.switchLoginButton, loginWindow, this.switchRegisterButton, 'login_form_info');\r\n        } else if (val === 'login') {\r\n            windowChange(loginWindow, this.switchRegisterButton, registerWindow, this.switchLoginButton, 'register_form_info');\r\n        }\r\n\r\n            function windowChange(activate, activateButton, deactivate, deactivateButton, infoFieldName) {\r\n            let infoField = document.getElementById(infoFieldName);\r\n\r\n            infoField.textContent = '';\r\n            deactivate.style.opacity = '0';\r\n            deactivateButton.disabled = true;\r\n            activate.style.display = 'block';\r\n            setTimeout(function () {\r\n                activate.style.opacity = '1';\r\n            });\r\n            setTimeout(function () {\r\n                deactivate.style.display = 'none';\r\n                activateButton.disabled = false;\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n    logIn() {\r\n    /**\r\n     * POST: json =  {userName: 'string'}\r\n     * GET: answer = json = {'ok': 'boolean', 'error_code': 'number' or null,\r\n     'error_message': 'string' or null}\r\n     */\r\n        const self = this;\r\n        let infoMessage = document.getElementById('login_form_info');\r\n        if (document.getElementById(\"login_field\").value) {\r\n            let userName = document.getElementById(\"login_field\").value;\r\n            document.getElementById(\"login_field\").value = '';\r\n            let sendData = {'userName': userName};\r\n\r\n            function login(answer) {\r\n                if (answer['ok'] === true) {\r\n                    self.onLoad(userName);\r\n                } else {\r\n                    infoMessage.textContent = answer[\"error_message\"];\r\n                }\r\n            }\r\n            knock_knock('login', sendData, login);\r\n        } else {\r\n            infoMessage.textContent = 'Please, enter user name!';\r\n        }\r\n    }\r\n\r\n    logOut() {\r\n        let userName = document.getElementById('user_name_field');\r\n        let logOutButton = document.getElementById('user_logout_button');\r\n        let tasksParent = document.getElementById(\"main_tasks\");\r\n        let authMenu = document.getElementById('auth_menu');\r\n\r\n        // userName.textContent = '';\r\n        while (userName.firstChild) {\r\n            userName.removeChild(userName.firstChild);\r\n        }\r\n\r\n        logOutButton.disabled = true;\r\n\r\n        while (tasksParent.firstChild) {\r\n            tasksParent.removeChild(tasksParent.firstChild);\r\n        }\r\n\r\n        authMenu.style.display = 'block';\r\n        setTimeout(function() {\r\n            authMenu.style.opacity = '1';\r\n        });\r\n    }\r\n\r\n    userDelete() {\r\n        const self = this;\r\n        let userName = document.getElementById('user_name_field').textContent;\r\n        let sendData = {\"userName\": userName};\r\n\r\n        let conf = function() {\r\n            knock_knock(\"user_delete\", sendData, del);\r\n        }\r\n\r\n        function del(answer) {\r\n            if (answer[\"ok\"] === true) {\r\n                self.logOut();\r\n            }\r\n        }\r\n\r\n        createConfirmWindow(conf, \"Are you sure, you want to delete user?\");\r\n    }\r\n\r\n    userRegister() {\r\n    /**\r\n     * POST: json =  {newUserName: 'string'}\r\n     * GET: answer = json = {'ok': 'boolean', 'error_code': 'number' or null,\r\n     'error_message': 'string' or null}\r\n     */\r\n        let infoMessage = document.getElementById(\"register_form_info\");\r\n        if (document.getElementById('register_form_text').value) {\r\n            let newUserName = document.getElementById('register_form_text').value;\r\n            let sendData = {'newUserName': newUserName};\r\n\r\n            function register(answer) {\r\n            if (answer['ok'] === true) {\r\n                infoMessage.textContent = 'New user ' + newUserName + ' successfully created!';\r\n            } else if (answer['error_code'] === 1062) {\r\n                infoMessage.textContent = 'Name ' + newUserName + ' is already used!';\r\n            } else {\r\n                infoMessage.textContent = answer['error_message'] + ' Код ошибки: ' + answer['error_code'];\r\n            }\r\n        }\r\n            knock_knock('user_register', sendData, register);\r\n        } else {\r\n                infoMessage.textContent = 'Please, enter new user name!';\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction events() {\r\n    function noEnterRefreshLogin(event) {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n            document.getElementById(\"task_input_button\").click();\r\n        }\r\n    }\r\n\r\n    function noEnterRefreshRegister(event) {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n            document.getElementById(\"register_form_button\").click();\r\n        }\r\n    }\r\n\r\n    let taskInputField = document.getElementById(\"task_input_field\");\r\n    taskInputField.addEventListener(\"keydown\", noEnterRefreshLogin, false);\r\n\r\n    let registerField = document.getElementById(\"register_form_text\");\r\n    registerField.addEventListener('keydown', noEnterRefreshRegister, false);\r\n}\r\n\r\nfunction knock_knock(path, sendData, func) {\r\n    if (window.fetch) {\r\n        let init = {method: 'POST',\r\n                    headers: {'Content-Type': 'application/json; charset=utf-8'},\r\n                    body: JSON.stringify(sendData)}\r\n\r\n        fetch('http://127.0.0.1:5000/' + path, init)\r\n            .then((answer) => {\r\n                if (answer.ok && answer.headers.get('Content-Type') === 'application/json') {\r\n                    return answer.json();\r\n                }\r\n            })\r\n            .then((answer) => {\r\n                func(answer);\r\n            })\r\n    } else {\r\n        let req = new XMLHttpRequest();\r\n        req.open('POST', 'http://127.0.0.1:5000/' + path);\r\n        req.setRequestHeader('Content-type', 'application/json; charset=utf-8');\r\n        req.send(JSON.stringify(sendData));\r\n\r\n        req.onreadystatechange = function () {\r\n            if (req.readyState === 4) {\r\n                if (req.status === 200 && req.getResponseHeader('Content-type') === 'application/json') {\r\n                        func(JSON.parse(req.responseText));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction createNewTaskList(userId, tasksFromServer, taskInputButtonId, taskParentId, existsTasksClass) {\r\n    let taskList = new TaskList();\r\n    let taskInputButton = document.getElementById(taskInputButtonId);\r\n\r\n    taskInputButton.onclick = function() {\r\n        taskList.addTask();\r\n    }\r\n\r\n    taskList.userId = userId;\r\n    for (let task of tasksFromServer) {\r\n        taskList.tasks.push(new Task(taskList, task[\"task_id\"], task[\"task_text\"], task[\"status\"]));\r\n    }\r\n    taskList.updateDom(taskParentId, existsTasksClass);\r\n}\r\n\r\nfunction createConfirmWindow(func, message) {\r\n    let shadow = document.getElementById(\"shadow\");\r\n    let confirmWindow = document.getElementById(\"confirm_window\");\r\n    let confirmWindowMessage = document.getElementById(\"confirm_window_message\");\r\n    let okButton = document.getElementById(\"confirm_window_ok_button\");\r\n    let cancelButton = document.getElementById(\"confirm_window_cancel_button\");\r\n\r\n    shadow.style.display = \"block\";\r\n    confirmWindowMessage.appendChild(document.createTextNode(message));\r\n    confirmWindow.style.display = \"block\";\r\n\r\n    setTimeout(function() {\r\n        shadow.style.opacity = \"0.5\";\r\n    })\r\n\r\n    okButton.onclick = click;\r\n    cancelButton.onclick = click;\r\n\r\n    function click() {\r\n        if (this.value === \"OK\") {\r\n            func();\r\n        }\r\n        shadow.style.display = \"none\";\r\n        confirmWindow.style.display = \"none\";\r\n        confirmWindowMessage.removeChild(confirmWindowMessage.firstChild);\r\n    }\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    let login = new Login();\r\n    events();\r\n});\r\n"]}